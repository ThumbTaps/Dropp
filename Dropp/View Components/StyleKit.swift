//
//  StyleKit.swift
//  Lissic
//
//  Created by Jeffery Jackson, Jr. on 4/30/17.
//  Copyright Â© 2017 arcyn1c. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class StyleKit : NSObject {

    //// Cache

    private struct Cache {
        static let lightTintColor: UIColor = UIColor(red: 0.506, green: 0.812, blue: 0.914, alpha: 1.000)
        static let lightGlyphColor: UIColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.900)
        static let darkBackdropOverlayColor: UIColor = UIColor(red: 0.133, green: 0.133, blue: 0.133, alpha: 0.800)
        static let darkBackgroundColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)
        static let lightBackdropOverlayColor: UIColor = UIColor(red: 0.957, green: 0.957, blue: 0.957, alpha: 0.750)
        static let lightBackgroundColor: UIColor = UIColor(red: 0.957, green: 0.957, blue: 0.957, alpha: 1.000)
        static let darkTintColor: UIColor = UIColor(red: 0.282, green: 0.396, blue: 0.529, alpha: 1.000)
        static let darkGlyphColor: UIColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.700)
        static let lightStrokeColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.120)
        static let darkStrokeColor: UIColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.100)
        static let lightPrimaryTextColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)
        static let lightSecondaryTextColor: UIColor = StyleKit.lightPrimaryTextColor.withAlpha(0.5)
        static let lightTertiaryTextColor: UIColor = StyleKit.lightPrimaryTextColor.withAlpha(0.25)
        static let darkPrimaryTextColor: UIColor = UIColor(red: 0.941, green: 0.941, blue: 0.941, alpha: 1.000)
        static let darkSecondaryTextColor: UIColor = StyleKit.darkPrimaryTextColor.withAlpha(0.5)
        static let darkTertiaryTextColor: UIColor = StyleKit.darkPrimaryTextColor.withAlpha(0.25)
        static let lightShadowColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.300)
        static let darkShadowColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.750)
        static var imageOfLightPlaceholderReleaseArtwork: UIImage?
        static var lightPlaceholderReleaseArtworkTargets: [AnyObject]?
        static var imageOfDarkPlaceholderReleaseArtwork: UIImage?
        static var darkPlaceholderReleaseArtworkTargets: [AnyObject]?
        static var imageOfLightPlaceholderArtistArtwork: UIImage?
        static var lightPlaceholderArtistArtworkTargets: [AnyObject]?
        static var imageOfDarkPlaceholderArtistArtwork: UIImage?
        static var darkPlaceholderArtistArtworkTargets: [AnyObject]?
    }

    //// Colors

    public dynamic class var lightTintColor: UIColor { return Cache.lightTintColor }
    public dynamic class var lightGlyphColor: UIColor { return Cache.lightGlyphColor }
    public dynamic class var darkBackdropOverlayColor: UIColor { return Cache.darkBackdropOverlayColor }
    public dynamic class var darkBackgroundColor: UIColor { return Cache.darkBackgroundColor }
    public dynamic class var lightBackdropOverlayColor: UIColor { return Cache.lightBackdropOverlayColor }
    public dynamic class var lightBackgroundColor: UIColor { return Cache.lightBackgroundColor }
    public dynamic class var darkTintColor: UIColor { return Cache.darkTintColor }
    public dynamic class var darkGlyphColor: UIColor { return Cache.darkGlyphColor }
    public dynamic class var lightStrokeColor: UIColor { return Cache.lightStrokeColor }
    public dynamic class var darkStrokeColor: UIColor { return Cache.darkStrokeColor }
    public dynamic class var lightPrimaryTextColor: UIColor { return Cache.lightPrimaryTextColor }
    public dynamic class var lightSecondaryTextColor: UIColor { return Cache.lightSecondaryTextColor }
    public dynamic class var lightTertiaryTextColor: UIColor { return Cache.lightTertiaryTextColor }
    public dynamic class var darkPrimaryTextColor: UIColor { return Cache.darkPrimaryTextColor }
    public dynamic class var darkSecondaryTextColor: UIColor { return Cache.darkSecondaryTextColor }
    public dynamic class var darkTertiaryTextColor: UIColor { return Cache.darkTertiaryTextColor }
    public dynamic class var lightShadowColor: UIColor { return Cache.lightShadowColor }
    public dynamic class var darkShadowColor: UIColor { return Cache.darkShadowColor }

    //// Drawing Methods

    public dynamic class func drawSearchIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// magnifying glass Drawing
        context.saveGState()
        context.translateBy(x: 158, y: 158)

        let magnifyingGlassPath = UIBezierPath()
        magnifyingGlassPath.move(to: CGPoint(x: -26.59, y: -77.82))
        magnifyingGlassPath.addCurve(to: CGPoint(x: -45.12, y: -74.37), controlPoint1: CGPoint(x: -33.13, y: -77.82), controlPoint2: CGPoint(x: -39.38, y: -76.6))
        magnifyingGlassPath.addCurve(to: CGPoint(x: -77.82, y: -26.59), controlPoint1: CGPoint(x: -64.26, y: -66.94), controlPoint2: CGPoint(x: -77.82, y: -48.35))
        magnifyingGlassPath.addCurve(to: CGPoint(x: -26.59, y: 24.64), controlPoint1: CGPoint(x: -77.82, y: 1.7), controlPoint2: CGPoint(x: -54.88, y: 24.64))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 24.64, y: -26.59), controlPoint1: CGPoint(x: 1.7, y: 24.64), controlPoint2: CGPoint(x: 24.64, y: 1.7))
        magnifyingGlassPath.addCurve(to: CGPoint(x: -26.59, y: -77.82), controlPoint1: CGPoint(x: 24.64, y: -54.88), controlPoint2: CGPoint(x: 1.7, y: -77.82))
        magnifyingGlassPath.close()
        magnifyingGlassPath.move(to: CGPoint(x: 20.97, y: -73.46))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 27.24, y: 13.75), controlPoint1: CGPoint(x: 44.74, y: -49.69), controlPoint2: CGPoint(x: 46.83, y: -12.4))
        magnifyingGlassPath.addLine(to: CGPoint(x: 75.32, y: 61.83))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 75.32, y: 69.93), controlPoint1: CGPoint(x: 77.56, y: 64.07), controlPoint2: CGPoint(x: 77.56, y: 67.7))
        magnifyingGlassPath.addLine(to: CGPoint(x: 69.93, y: 75.32))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 61.84, y: 75.32), controlPoint1: CGPoint(x: 67.7, y: 77.56), controlPoint2: CGPoint(x: 64.07, y: 77.56))
        magnifyingGlassPath.addLine(to: CGPoint(x: 13.75, y: 27.24))
        magnifyingGlassPath.addCurve(to: CGPoint(x: -73.46, y: 20.97), controlPoint1: CGPoint(x: -12.39, y: 46.83), controlPoint2: CGPoint(x: -49.69, y: 44.74))
        magnifyingGlassPath.addCurve(to: CGPoint(x: -74.27, y: -72.62), controlPoint1: CGPoint(x: -99.24, y: -4.81), controlPoint2: CGPoint(x: -99.51, y: -46.5))
        magnifyingGlassPath.addLine(to: CGPoint(x: -73.46, y: -73.46))
        magnifyingGlassPath.addCurve(to: CGPoint(x: 20.97, y: -73.46), controlPoint1: CGPoint(x: -47.4, y: -99.51), controlPoint2: CGPoint(x: -5.08, y: -99.51))
        magnifyingGlassPath.close()
        iconColor.setFill()
        magnifyingGlassPath.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawLeftIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: 178.85, y: 150.15)
        context.rotate(by: 135 * CGFloat.pi/180)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 53.3, y: -59.35))
        bezierPath.addLine(to: CGPoint(x: 53.69, y: -59.25))
        bezierPath.addCurve(to: CGPoint(x: 59.25, y: -53.69), controlPoint1: CGPoint(x: 56.27, y: -58.31), controlPoint2: CGPoint(x: 58.31, y: -56.27))
        bezierPath.addCurve(to: CGPoint(x: 60, y: -44.71), controlPoint1: CGPoint(x: 60, y: -51.32), controlPoint2: CGPoint(x: 60, y: -49.12))
        bezierPath.addCurve(to: CGPoint(x: 60, y: 40.29), controlPoint1: CGPoint(x: 60, y: -44.71), controlPoint2: CGPoint(x: 60, y: 22.25))
        bezierPath.addCurve(to: CGPoint(x: 60, y: 44.71), controlPoint1: CGPoint(x: 60, y: 43.09), controlPoint2: CGPoint(x: 60, y: 44.71))
        bezierPath.addCurve(to: CGPoint(x: 59.35, y: 53.3), controlPoint1: CGPoint(x: 60, y: 49.12), controlPoint2: CGPoint(x: 60, y: 51.32))
        bezierPath.addLine(to: CGPoint(x: 59.25, y: 53.69))
        bezierPath.addLine(to: CGPoint(x: 59.16, y: 53.93))
        bezierPath.addCurve(to: CGPoint(x: 53.69, y: 59.25), controlPoint1: CGPoint(x: 58.18, y: 56.4), controlPoint2: CGPoint(x: 56.19, y: 58.34))
        bezierPath.addLine(to: CGPoint(x: 53.57, y: 59.29))
        bezierPath.addLine(to: CGPoint(x: 53.46, y: 59.32))
        bezierPath.addLine(to: CGPoint(x: 53.35, y: 59.35))
        bezierPath.addLine(to: CGPoint(x: 53.24, y: 59.38))
        bezierPath.addLine(to: CGPoint(x: 53.13, y: 59.41))
        bezierPath.addLine(to: CGPoint(x: 53.02, y: 59.44))
        bezierPath.addLine(to: CGPoint(x: 52.91, y: 59.47))
        bezierPath.addLine(to: CGPoint(x: 52.8, y: 59.5))
        bezierPath.addLine(to: CGPoint(x: 52.69, y: 59.52))
        bezierPath.addLine(to: CGPoint(x: 52.58, y: 59.55))
        bezierPath.addLine(to: CGPoint(x: 52.47, y: 59.57))
        bezierPath.addLine(to: CGPoint(x: 52.35, y: 59.6))
        bezierPath.addLine(to: CGPoint(x: 52.24, y: 59.62))
        bezierPath.addLine(to: CGPoint(x: 52.13, y: 59.64))
        bezierPath.addLine(to: CGPoint(x: 52.02, y: 59.66))
        bezierPath.addLine(to: CGPoint(x: 51.9, y: 59.68))
        bezierPath.addLine(to: CGPoint(x: 51.79, y: 59.7))
        bezierPath.addLine(to: CGPoint(x: 51.67, y: 59.72))
        bezierPath.addLine(to: CGPoint(x: 51.56, y: 59.74))
        bezierPath.addLine(to: CGPoint(x: 51.44, y: 59.76))
        bezierPath.addLine(to: CGPoint(x: 51.32, y: 59.77))
        bezierPath.addLine(to: CGPoint(x: 51.21, y: 59.79))
        bezierPath.addLine(to: CGPoint(x: 51.09, y: 59.8))
        bezierPath.addLine(to: CGPoint(x: 50.97, y: 59.82))
        bezierPath.addLine(to: CGPoint(x: 50.84, y: 59.83))
        bezierPath.addLine(to: CGPoint(x: 50.72, y: 59.84))
        bezierPath.addLine(to: CGPoint(x: 50.6, y: 59.86))
        bezierPath.addLine(to: CGPoint(x: 50.47, y: 59.87))
        bezierPath.addLine(to: CGPoint(x: 50.35, y: 59.88))
        bezierPath.addLine(to: CGPoint(x: 50.22, y: 59.89))
        bezierPath.addLine(to: CGPoint(x: 50.09, y: 59.9))
        bezierPath.addLine(to: CGPoint(x: 49.96, y: 59.91))
        bezierPath.addLine(to: CGPoint(x: 49.83, y: 59.91))
        bezierPath.addLine(to: CGPoint(x: 49.7, y: 59.92))
        bezierPath.addLine(to: CGPoint(x: 49.56, y: 59.93))
        bezierPath.addLine(to: CGPoint(x: 49.43, y: 59.94))
        bezierPath.addLine(to: CGPoint(x: 49.29, y: 59.94))
        bezierPath.addLine(to: CGPoint(x: 49.15, y: 59.95))
        bezierPath.addLine(to: CGPoint(x: 49.01, y: 59.96))
        bezierPath.addLine(to: CGPoint(x: 48.86, y: 59.96))
        bezierPath.addLine(to: CGPoint(x: 48.72, y: 59.97))
        bezierPath.addLine(to: CGPoint(x: 48.57, y: 59.97))
        bezierPath.addLine(to: CGPoint(x: 48.42, y: 59.97))
        bezierPath.addLine(to: CGPoint(x: 48.27, y: 59.98))
        bezierPath.addLine(to: CGPoint(x: 48.11, y: 59.98))
        bezierPath.addCurve(to: CGPoint(x: 44.71, y: 60), controlPoint1: CGPoint(x: 47.13, y: 60), controlPoint2: CGPoint(x: 46.02, y: 60))
        bezierPath.addLine(to: CGPoint(x: -44.71, y: 60))
        bezierPath.addCurve(to: CGPoint(x: -53.3, y: 59.35), controlPoint1: CGPoint(x: -49.12, y: 60), controlPoint2: CGPoint(x: -51.32, y: 60))
        bezierPath.addLine(to: CGPoint(x: -53.69, y: 59.25))
        bezierPath.addCurve(to: CGPoint(x: -59.25, y: 53.69), controlPoint1: CGPoint(x: -56.27, y: 58.31), controlPoint2: CGPoint(x: -58.31, y: 56.27))
        bezierPath.addCurve(to: CGPoint(x: -60, y: 44.71), controlPoint1: CGPoint(x: -60, y: 51.32), controlPoint2: CGPoint(x: -60, y: 49.12))
        bezierPath.addLine(to: CGPoint(x: -60, y: 40.29))
        bezierPath.addCurve(to: CGPoint(x: -59.35, y: 31.7), controlPoint1: CGPoint(x: -60, y: 35.88), controlPoint2: CGPoint(x: -60, y: 33.68))
        bezierPath.addLine(to: CGPoint(x: -59.25, y: 31.31))
        bezierPath.addCurve(to: CGPoint(x: -53.69, y: 25.75), controlPoint1: CGPoint(x: -58.31, y: 28.73), controlPoint2: CGPoint(x: -56.27, y: 26.69))
        bezierPath.addCurve(to: CGPoint(x: -44.71, y: 25), controlPoint1: CGPoint(x: -51.32, y: 25), controlPoint2: CGPoint(x: -49.12, y: 25))
        bezierPath.addLine(to: CGPoint(x: 25, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 25, y: -44.71), controlPoint1: CGPoint(x: 25, y: -1.33), controlPoint2: CGPoint(x: 25, y: -44.71))
        bezierPath.addCurve(to: CGPoint(x: 25.65, y: -53.3), controlPoint1: CGPoint(x: 25, y: -49.12), controlPoint2: CGPoint(x: 25, y: -51.32))
        bezierPath.addLine(to: CGPoint(x: 25.75, y: -53.69))
        bezierPath.addCurve(to: CGPoint(x: 31.31, y: -59.25), controlPoint1: CGPoint(x: 26.69, y: -56.27), controlPoint2: CGPoint(x: 28.73, y: -58.31))
        bezierPath.addCurve(to: CGPoint(x: 40.29, y: -60), controlPoint1: CGPoint(x: 33.68, y: -60), controlPoint2: CGPoint(x: 35.88, y: -60))
        bezierPath.addLine(to: CGPoint(x: 44.71, y: -60))
        bezierPath.addCurve(to: CGPoint(x: 53.3, y: -59.35), controlPoint1: CGPoint(x: 49.12, y: -60), controlPoint2: CGPoint(x: 51.32, y: -60))
        bezierPath.close()
        iconColor.setFill()
        bezierPath.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawLightBackdrop(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 1024, height: 1024), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 1024, height: 1024), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 1024, y: resizedFrame.height / 1024)


        //// Group 2
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 658.8, y: 935.36))
        bezierPath.addCurve(to: CGPoint(x: 795.34, y: 668.23), controlPoint1: CGPoint(x: 743.37, y: 883.08), controlPoint2: CGPoint(x: 795.34, y: 785.1))
        bezierPath.addCurve(to: CGPoint(x: 630.14, y: 357.58), controlPoint1: CGPoint(x: 795.34, y: 557.22), controlPoint2: CGPoint(x: 733.57, y: 468.36))
        bezierPath.addCurve(to: CGPoint(x: 518.46, y: 169.36), controlPoint1: CGPoint(x: 518.46, y: 237.95), controlPoint2: CGPoint(x: 518.46, y: 169.36))
        bezierPath.addCurve(to: CGPoint(x: 401.41, y: 357.58), controlPoint1: CGPoint(x: 518.46, y: 169.36), controlPoint2: CGPoint(x: 505.12, y: 234.49))
        bezierPath.addCurve(to: CGPoint(x: 231.14, y: 668.23), controlPoint1: CGPoint(x: 310.9, y: 465), controlPoint2: CGPoint(x: 231.14, y: 545.42))
        bezierPath.addCurve(to: CGPoint(x: 366.36, y: 935.76), controlPoint1: CGPoint(x: 231.14, y: 781.85), controlPoint2: CGPoint(x: 281.7, y: 882.42))
        bezierPath.addCurve(to: CGPoint(x: 64, y: 512), controlPoint1: CGPoint(x: 190.5, y: 875.25), controlPoint2: CGPoint(x: 64, y: 708.28))
        bezierPath.addCurve(to: CGPoint(x: 512, y: 64), controlPoint1: CGPoint(x: 64, y: 264.75), controlPoint2: CGPoint(x: 264.74, y: 64))
        bezierPath.addCurve(to: CGPoint(x: 960, y: 512), controlPoint1: CGPoint(x: 759.26, y: 64), controlPoint2: CGPoint(x: 960, y: 264.75))
        bezierPath.addCurve(to: CGPoint(x: 658.8, y: 935.36), controlPoint1: CGPoint(x: 960, y: 707.85), controlPoint2: CGPoint(x: 834.05, y: 874.52))
        bezierPath.close()
        bezierPath.usesEvenOddFillRule = true
        StyleKit.lightTintColor.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 505.91, y: 959.96))
        bezier2Path.addCurve(to: CGPoint(x: 405.56, y: 901.47), controlPoint1: CGPoint(x: 462.03, y: 959.96), controlPoint2: CGPoint(x: 414.49, y: 941.89))
        bezier2Path.addCurve(to: CGPoint(x: 403.22, y: 880.87), controlPoint1: CGPoint(x: 404.22, y: 895.37), controlPoint2: CGPoint(x: 403.24, y: 885.88))
        bezier2Path.addCurve(to: CGPoint(x: 558.91, y: 776.63), controlPoint1: CGPoint(x: 402.48, y: 758.37), controlPoint2: CGPoint(x: 564.72, y: 789.36))
        bezier2Path.addCurve(to: CGPoint(x: 419.49, y: 521.07), controlPoint1: CGPoint(x: 530.22, y: 713.7), controlPoint2: CGPoint(x: 483.92, y: 624.74))
        bezier2Path.addCurve(to: CGPoint(x: 406.3, y: 469.59), controlPoint1: CGPoint(x: 403.48, y: 495.29), controlPoint2: CGPoint(x: 399.5, y: 482.64))
        bezier2Path.addCurve(to: CGPoint(x: 445.77, y: 447.43), controlPoint1: CGPoint(x: 412.32, y: 458.03), controlPoint2: CGPoint(x: 436.18, y: 450.97))
        bezier2Path.addCurve(to: CGPoint(x: 555.2, y: 410.19), controlPoint1: CGPoint(x: 487.54, y: 431.98), controlPoint2: CGPoint(x: 494.77, y: 428.78))
        bezier2Path.addCurve(to: CGPoint(x: 589.32, y: 416.09), controlPoint1: CGPoint(x: 572.62, y: 404.83), controlPoint2: CGPoint(x: 577.61, y: 404.29))
        bezier2Path.addCurve(to: CGPoint(x: 637.77, y: 469.59), controlPoint1: CGPoint(x: 602.85, y: 429.71), controlPoint2: CGPoint(x: 619.32, y: 445.28))
        bezier2Path.addCurve(to: CGPoint(x: 602.61, y: 525.3), controlPoint1: CGPoint(x: 660.4, y: 499.4), controlPoint2: CGPoint(x: 659.4, y: 511.57))
        bezier2Path.addCurve(to: CGPoint(x: 495.72, y: 560.89), controlPoint1: CGPoint(x: 554.17, y: 537.01), controlPoint2: CGPoint(x: 488.16, y: 547.16))
        bezier2Path.addCurve(to: CGPoint(x: 589.2, y: 739.88), controlPoint1: CGPoint(x: 502.47, y: 573.19), controlPoint2: CGPoint(x: 550.75, y: 661.73))
        bezier2Path.addCurve(to: CGPoint(x: 624.33, y: 852.42), controlPoint1: CGPoint(x: 607.18, y: 776.44), controlPoint2: CGPoint(x: 624.33, y: 818.2))
        bezier2Path.addCurve(to: CGPoint(x: 505.91, y: 959.96), controlPoint1: CGPoint(x: 624.33, y: 913.85), controlPoint2: CGPoint(x: 596.03, y: 959.96))
        bezier2Path.close()
        bezier2Path.usesEvenOddFillRule = true
        StyleKit.darkTintColor.setFill()
        bezier2Path.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawLightPlaceholderReleaseArtwork(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// music sun
        //// sun Drawing
        let sunPath = UIBezierPath(ovalIn: CGRect(x: 19, y: 19, width: 262, height: 262))
        StyleKit.lightTintColor.setFill()
        sunPath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 145.24, y: 218))
        bezierPath.addCurve(to: CGPoint(x: 120.6, y: 203.73), controlPoint1: CGPoint(x: 134.46, y: 218), controlPoint2: CGPoint(x: 122.79, y: 213.59))
        bezierPath.addCurve(to: CGPoint(x: 120.02, y: 198.71), controlPoint1: CGPoint(x: 120.27, y: 202.24), controlPoint2: CGPoint(x: 120.03, y: 199.93))
        bezierPath.addCurve(to: CGPoint(x: 158.25, y: 173.28), controlPoint1: CGPoint(x: 119.84, y: 168.82), controlPoint2: CGPoint(x: 159.68, y: 176.38))
        bezierPath.addCurve(to: CGPoint(x: 124.02, y: 110.94), controlPoint1: CGPoint(x: 151.21, y: 157.93), controlPoint2: CGPoint(x: 139.84, y: 136.23))
        bezierPath.addCurve(to: CGPoint(x: 120.78, y: 98.38), controlPoint1: CGPoint(x: 120.09, y: 104.65), controlPoint2: CGPoint(x: 119.11, y: 101.56))
        bezierPath.addCurve(to: CGPoint(x: 130.47, y: 92.97), controlPoint1: CGPoint(x: 122.26, y: 95.56), controlPoint2: CGPoint(x: 128.12, y: 93.84))
        bezierPath.addCurve(to: CGPoint(x: 157.34, y: 83.89), controlPoint1: CGPoint(x: 140.73, y: 89.2), controlPoint2: CGPoint(x: 142.5, y: 88.42))
        bezierPath.addCurve(to: CGPoint(x: 165.72, y: 85.33), controlPoint1: CGPoint(x: 161.62, y: 82.58), controlPoint2: CGPoint(x: 162.84, y: 82.45))
        bezierPath.addCurve(to: CGPoint(x: 177.61, y: 98.38), controlPoint1: CGPoint(x: 169.04, y: 88.65), controlPoint2: CGPoint(x: 173.08, y: 92.45))
        bezierPath.addCurve(to: CGPoint(x: 168.98, y: 111.97), controlPoint1: CGPoint(x: 183.17, y: 105.65), controlPoint2: CGPoint(x: 182.92, y: 108.62))
        bezierPath.addCurve(to: CGPoint(x: 142.73, y: 120.65), controlPoint1: CGPoint(x: 157.09, y: 114.83), controlPoint2: CGPoint(x: 140.88, y: 117.3))
        bezierPath.addCurve(to: CGPoint(x: 165.69, y: 164.31), controlPoint1: CGPoint(x: 144.39, y: 123.65), controlPoint2: CGPoint(x: 156.25, y: 145.25))
        bezierPath.addCurve(to: CGPoint(x: 174.31, y: 191.76), controlPoint1: CGPoint(x: 170.1, y: 173.23), controlPoint2: CGPoint(x: 174.31, y: 183.42))
        bezierPath.addCurve(to: CGPoint(x: 145.24, y: 218), controlPoint1: CGPoint(x: 174.31, y: 206.75), controlPoint2: CGPoint(x: 167.36, y: 218))
        bezierPath.close()
        bezierPath.usesEvenOddFillRule = true
        StyleKit.lightGlyphColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawDarkPlaceholderReleaseArtwork(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// album base Drawing
        let albumBasePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 300, height: 300))
        StyleKit.darkBackgroundColor.setFill()
        albumBasePath.fill()


        //// music sun
        //// sun Drawing
        let sunPath = UIBezierPath(ovalIn: CGRect(x: 19, y: 19, width: 262, height: 262))
        StyleKit.darkTintColor.setFill()
        sunPath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 145.24, y: 218))
        bezierPath.addCurve(to: CGPoint(x: 120.6, y: 203.73), controlPoint1: CGPoint(x: 134.46, y: 218), controlPoint2: CGPoint(x: 122.79, y: 213.59))
        bezierPath.addCurve(to: CGPoint(x: 120.02, y: 198.71), controlPoint1: CGPoint(x: 120.27, y: 202.24), controlPoint2: CGPoint(x: 120.03, y: 199.93))
        bezierPath.addCurve(to: CGPoint(x: 158.25, y: 173.28), controlPoint1: CGPoint(x: 119.84, y: 168.82), controlPoint2: CGPoint(x: 159.68, y: 176.38))
        bezierPath.addCurve(to: CGPoint(x: 124.02, y: 110.94), controlPoint1: CGPoint(x: 151.21, y: 157.93), controlPoint2: CGPoint(x: 139.84, y: 136.23))
        bezierPath.addCurve(to: CGPoint(x: 120.78, y: 98.38), controlPoint1: CGPoint(x: 120.09, y: 104.65), controlPoint2: CGPoint(x: 119.11, y: 101.56))
        bezierPath.addCurve(to: CGPoint(x: 130.47, y: 92.97), controlPoint1: CGPoint(x: 122.26, y: 95.56), controlPoint2: CGPoint(x: 128.12, y: 93.84))
        bezierPath.addCurve(to: CGPoint(x: 157.34, y: 83.89), controlPoint1: CGPoint(x: 140.73, y: 89.2), controlPoint2: CGPoint(x: 142.5, y: 88.42))
        bezierPath.addCurve(to: CGPoint(x: 165.72, y: 85.33), controlPoint1: CGPoint(x: 161.62, y: 82.58), controlPoint2: CGPoint(x: 162.84, y: 82.45))
        bezierPath.addCurve(to: CGPoint(x: 177.61, y: 98.38), controlPoint1: CGPoint(x: 169.04, y: 88.65), controlPoint2: CGPoint(x: 173.08, y: 92.45))
        bezierPath.addCurve(to: CGPoint(x: 168.98, y: 111.97), controlPoint1: CGPoint(x: 183.17, y: 105.65), controlPoint2: CGPoint(x: 182.92, y: 108.62))
        bezierPath.addCurve(to: CGPoint(x: 142.73, y: 120.65), controlPoint1: CGPoint(x: 157.09, y: 114.83), controlPoint2: CGPoint(x: 140.88, y: 117.3))
        bezierPath.addCurve(to: CGPoint(x: 165.69, y: 164.31), controlPoint1: CGPoint(x: 144.39, y: 123.65), controlPoint2: CGPoint(x: 156.25, y: 145.25))
        bezierPath.addCurve(to: CGPoint(x: 174.31, y: 191.76), controlPoint1: CGPoint(x: 170.1, y: 173.23), controlPoint2: CGPoint(x: 174.31, y: 183.42))
        bezierPath.addCurve(to: CGPoint(x: 145.24, y: 218), controlPoint1: CGPoint(x: 174.31, y: 206.75), controlPoint2: CGPoint(x: 167.36, y: 218))
        bezierPath.close()
        bezierPath.usesEvenOddFillRule = true
        StyleKit.darkGlyphColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawSettingsIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 162.81, y: 66.11))
        bezier2Path.addCurve(to: CGPoint(x: 167.98, y: 74.99), controlPoint1: CGPoint(x: 166.1, y: 67.05), controlPoint2: CGPoint(x: 166.65, y: 69.28))
        bezier2Path.addCurve(to: CGPoint(x: 176.14, y: 85.66), controlPoint1: CGPoint(x: 169.14, y: 79.93), controlPoint2: CGPoint(x: 172.43, y: 84.13))
        bezier2Path.addCurve(to: CGPoint(x: 190.2, y: 84.11), controlPoint1: CGPoint(x: 179.84, y: 87.18), controlPoint2: CGPoint(x: 185.84, y: 86.89))
        bezier2Path.addCurve(to: CGPoint(x: 200.14, y: 81.5), controlPoint1: CGPoint(x: 195.19, y: 80.94), controlPoint2: CGPoint(x: 197.14, y: 79.84))
        bezier2Path.addCurve(to: CGPoint(x: 218.37, y: 99.74), controlPoint1: CGPoint(x: 204.83, y: 84.1), controlPoint2: CGPoint(x: 215.77, y: 95.04))
        bezier2Path.addCurve(to: CGPoint(x: 215.76, y: 109.67), controlPoint1: CGPoint(x: 220.04, y: 102.73), controlPoint2: CGPoint(x: 218.85, y: 104.69))
        bezier2Path.addCurve(to: CGPoint(x: 214.06, y: 123.71), controlPoint1: CGPoint(x: 212.82, y: 114.41), controlPoint2: CGPoint(x: 212.51, y: 120.01))
        bezier2Path.addCurve(to: CGPoint(x: 225.01, y: 131.84), controlPoint1: CGPoint(x: 215.6, y: 127.4), controlPoint2: CGPoint(x: 219.49, y: 130.61))
        bezier2Path.addCurve(to: CGPoint(x: 233.89, y: 137.02), controlPoint1: CGPoint(x: 230.79, y: 133.12), controlPoint2: CGPoint(x: 232.95, y: 133.72))
        bezier2Path.addCurve(to: CGPoint(x: 233.89, y: 162.81), controlPoint1: CGPoint(x: 235.37, y: 142.18), controlPoint2: CGPoint(x: 235.37, y: 157.64))
        bezier2Path.addCurve(to: CGPoint(x: 225.01, y: 167.98), controlPoint1: CGPoint(x: 232.95, y: 166.1), controlPoint2: CGPoint(x: 230.72, y: 166.65))
        bezier2Path.addCurve(to: CGPoint(x: 214.2, y: 175.83), controlPoint1: CGPoint(x: 218.98, y: 169.4), controlPoint2: CGPoint(x: 215.73, y: 172.13))
        bezier2Path.addCurve(to: CGPoint(x: 215.89, y: 190.2), controlPoint1: CGPoint(x: 212.68, y: 179.53), controlPoint2: CGPoint(x: 212.51, y: 184.9))
        bezier2Path.addCurve(to: CGPoint(x: 218.5, y: 200.14), controlPoint1: CGPoint(x: 219.06, y: 195.19), controlPoint2: CGPoint(x: 220.16, y: 197.14))
        bezier2Path.addCurve(to: CGPoint(x: 200.26, y: 218.37), controlPoint1: CGPoint(x: 215.9, y: 204.83), controlPoint2: CGPoint(x: 204.96, y: 215.77))
        bezier2Path.addCurve(to: CGPoint(x: 190.33, y: 215.76), controlPoint1: CGPoint(x: 197.27, y: 220.04), controlPoint2: CGPoint(x: 195.31, y: 218.85))
        bezier2Path.addCurve(to: CGPoint(x: 176.48, y: 213.93), controlPoint1: CGPoint(x: 185.08, y: 212.51), controlPoint2: CGPoint(x: 180.2, y: 212.38))
        bezier2Path.addCurve(to: CGPoint(x: 167.98, y: 225.01), controlPoint1: CGPoint(x: 172.75, y: 215.47), controlPoint2: CGPoint(x: 169.39, y: 219))
        bezier2Path.addCurve(to: CGPoint(x: 162.81, y: 233.89), controlPoint1: CGPoint(x: 166.65, y: 230.72), controlPoint2: CGPoint(x: 166.1, y: 232.95))
        bezier2Path.addCurve(to: CGPoint(x: 137.02, y: 233.89), controlPoint1: CGPoint(x: 157.64, y: 235.37), controlPoint2: CGPoint(x: 142.18, y: 235.37))
        bezier2Path.addCurve(to: CGPoint(x: 131.84, y: 225.01), controlPoint1: CGPoint(x: 133.72, y: 232.95), controlPoint2: CGPoint(x: 133.12, y: 230.79))
        bezier2Path.addCurve(to: CGPoint(x: 123.55, y: 213.93), controlPoint1: CGPoint(x: 130.47, y: 218.88), controlPoint2: CGPoint(x: 127.24, y: 215.47))
        bezier2Path.addCurve(to: CGPoint(x: 109.67, y: 215.76), controlPoint1: CGPoint(x: 119.85, y: 212.39), controlPoint2: CGPoint(x: 114.94, y: 212.49))
        bezier2Path.addCurve(to: CGPoint(x: 99.74, y: 218.37), controlPoint1: CGPoint(x: 104.69, y: 218.85), controlPoint2: CGPoint(x: 102.73, y: 220.04))
        bezier2Path.addCurve(to: CGPoint(x: 81.5, y: 200.14), controlPoint1: CGPoint(x: 95.04, y: 215.77), controlPoint2: CGPoint(x: 84.1, y: 204.83))
        bezier2Path.addCurve(to: CGPoint(x: 84.12, y: 190.2), controlPoint1: CGPoint(x: 79.84, y: 197.14), controlPoint2: CGPoint(x: 80.94, y: 195.19))
        bezier2Path.addCurve(to: CGPoint(x: 86.23, y: 177.19), controlPoint1: CGPoint(x: 87.19, y: 185.36), controlPoint2: CGPoint(x: 87.75, y: 180.89))
        bezier2Path.addCurve(to: CGPoint(x: 74.99, y: 167.98), controlPoint1: CGPoint(x: 84.71, y: 173.49), controlPoint2: CGPoint(x: 80.48, y: 169.27))
        bezier2Path.addCurve(to: CGPoint(x: 66.11, y: 162.81), controlPoint1: CGPoint(x: 69.28, y: 166.65), controlPoint2: CGPoint(x: 67.05, y: 166.1))
        bezier2Path.addCurve(to: CGPoint(x: 66.11, y: 137.02), controlPoint1: CGPoint(x: 64.63, y: 157.64), controlPoint2: CGPoint(x: 64.63, y: 142.18))
        bezier2Path.addCurve(to: CGPoint(x: 74.99, y: 131.84), controlPoint1: CGPoint(x: 67.05, y: 133.72), controlPoint2: CGPoint(x: 69.21, y: 133.12))
        bezier2Path.addCurve(to: CGPoint(x: 85.93, y: 123.65), controlPoint1: CGPoint(x: 80.06, y: 130.71), controlPoint2: CGPoint(x: 84.38, y: 127.34))
        bezier2Path.addCurve(to: CGPoint(x: 84.24, y: 109.67), controlPoint1: CGPoint(x: 87.47, y: 119.95), controlPoint2: CGPoint(x: 86.94, y: 114.02))
        bezier2Path.addCurve(to: CGPoint(x: 81.63, y: 99.74), controlPoint1: CGPoint(x: 81.15, y: 104.69), controlPoint2: CGPoint(x: 79.96, y: 102.73))
        bezier2Path.addCurve(to: CGPoint(x: 99.86, y: 81.5), controlPoint1: CGPoint(x: 84.23, y: 95.04), controlPoint2: CGPoint(x: 95.17, y: 84.1))
        bezier2Path.addCurve(to: CGPoint(x: 109.8, y: 84.11), controlPoint1: CGPoint(x: 102.86, y: 79.84), controlPoint2: CGPoint(x: 104.81, y: 80.94))
        bezier2Path.addCurve(to: CGPoint(x: 124.15, y: 85.66), controlPoint1: CGPoint(x: 114.02, y: 86.8), controlPoint2: CGPoint(x: 120.47, y: 87.18))
        bezier2Path.addCurve(to: CGPoint(x: 131.84, y: 74.99), controlPoint1: CGPoint(x: 127.82, y: 84.14), controlPoint2: CGPoint(x: 130.75, y: 79.86))
        bezier2Path.addCurve(to: CGPoint(x: 137.02, y: 66.11), controlPoint1: CGPoint(x: 133.12, y: 69.21), controlPoint2: CGPoint(x: 133.72, y: 67.05))
        bezier2Path.addCurve(to: CGPoint(x: 142.48, y: 65.28), controlPoint1: CGPoint(x: 138.3, y: 65.74), controlPoint2: CGPoint(x: 140.23, y: 65.46))
        bezier2Path.addCurve(to: CGPoint(x: 162.81, y: 66.11), controlPoint1: CGPoint(x: 149.25, y: 64.72), controlPoint2: CGPoint(x: 158.93, y: 65))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 150.55, y: 116.55))
        bezier2Path.addCurve(to: CGPoint(x: 139.89, y: 118.31), controlPoint1: CGPoint(x: 146.82, y: 116.55), controlPoint2: CGPoint(x: 143.23, y: 117.17))
        bezier2Path.addCurve(to: CGPoint(x: 117.65, y: 149.45), controlPoint1: CGPoint(x: 126.95, y: 122.74), controlPoint2: CGPoint(x: 117.65, y: 135.01))
        bezier2Path.addCurve(to: CGPoint(x: 150.55, y: 182.35), controlPoint1: CGPoint(x: 117.65, y: 167.62), controlPoint2: CGPoint(x: 132.38, y: 182.35))
        bezier2Path.addCurve(to: CGPoint(x: 183.45, y: 149.45), controlPoint1: CGPoint(x: 168.72, y: 182.35), controlPoint2: CGPoint(x: 183.45, y: 167.62))
        bezier2Path.addCurve(to: CGPoint(x: 150.55, y: 116.55), controlPoint1: CGPoint(x: 183.45, y: 131.28), controlPoint2: CGPoint(x: 168.72, y: 116.55))
        bezier2Path.close()
        iconColor.setFill()
        bezier2Path.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawArtistsIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// microphone Drawing
        let microphonePath = UIBezierPath()
        microphonePath.move(to: CGPoint(x: 128.91, y: 76.52))
        microphonePath.addCurve(to: CGPoint(x: 137.07, y: 109.61), controlPoint1: CGPoint(x: 136.09, y: 86.19), controlPoint2: CGPoint(x: 139.38, y: 97.47))
        microphonePath.addCurve(to: CGPoint(x: 213.03, y: 179.11), controlPoint1: CGPoint(x: 155.49, y: 123.43), controlPoint2: CGPoint(x: 210.78, y: 177.24))
        microphonePath.addCurve(to: CGPoint(x: 214.8, y: 189.25), controlPoint1: CGPoint(x: 215.57, y: 181.23), controlPoint2: CGPoint(x: 215.84, y: 185.31))
        microphonePath.addCurve(to: CGPoint(x: 234.68, y: 212.73), controlPoint1: CGPoint(x: 220.64, y: 194.32), controlPoint2: CGPoint(x: 233.16, y: 205.86))
        microphonePath.addCurve(to: CGPoint(x: 207.85, y: 234.74), controlPoint1: CGPoint(x: 236.66, y: 221.74), controlPoint2: CGPoint(x: 229.71, y: 233.74))
        microphonePath.addCurve(to: CGPoint(x: 135.32, y: 213.8), controlPoint1: CGPoint(x: 185.99, y: 235.74), controlPoint2: CGPoint(x: 166.12, y: 234.81))
        microphonePath.addCurve(to: CGPoint(x: 69.27, y: 210.8), controlPoint1: CGPoint(x: 104.51, y: 192.8), controlPoint2: CGPoint(x: 69.27, y: 210.8))
        microphonePath.addCurve(to: CGPoint(x: 66.29, y: 207.8), controlPoint1: CGPoint(x: 69.27, y: 210.8), controlPoint2: CGPoint(x: 66.29, y: 210.8))
        microphonePath.addCurve(to: CGPoint(x: 69.27, y: 203.8), controlPoint1: CGPoint(x: 66.29, y: 204.8), controlPoint2: CGPoint(x: 69.27, y: 203.8))
        microphonePath.addCurve(to: CGPoint(x: 131.34, y: 203.8), controlPoint1: CGPoint(x: 69.27, y: 203.8), controlPoint2: CGPoint(x: 106.5, y: 190.79))
        microphonePath.addCurve(to: CGPoint(x: 177.05, y: 225.81), controlPoint1: CGPoint(x: 156.18, y: 216.8), controlPoint2: CGPoint(x: 154.19, y: 220.81))
        microphonePath.addCurve(to: CGPoint(x: 225.73, y: 219.74), controlPoint1: CGPoint(x: 199.9, y: 230.81), controlPoint2: CGPoint(x: 217.79, y: 230.74))
        microphonePath.addCurve(to: CGPoint(x: 212.07, y: 195.25), controlPoint1: CGPoint(x: 232.16, y: 210.84), controlPoint2: CGPoint(x: 217.81, y: 199.33))
        microphonePath.addCurve(to: CGPoint(x: 203.78, y: 198.62), controlPoint1: CGPoint(x: 209.8, y: 198.52), controlPoint2: CGPoint(x: 206.69, y: 200.42))
        microphonePath.addCurve(to: CGPoint(x: 116.26, y: 134.4), controlPoint1: CGPoint(x: 201.6, y: 197.28), controlPoint2: CGPoint(x: 116.26, y: 134.4))
        microphonePath.addCurve(to: CGPoint(x: 81.82, y: 131.05), controlPoint1: CGPoint(x: 105.81, y: 140.77), controlPoint2: CGPoint(x: 93.48, y: 139.26))
        microphonePath.addCurve(to: CGPoint(x: 71.64, y: 80.35), controlPoint1: CGPoint(x: 64.28, y: 118.71), controlPoint2: CGPoint(x: 59.72, y: 97.65))
        microphonePath.addCurve(to: CGPoint(x: 94.01, y: 65.8), controlPoint1: CGPoint(x: 76.1, y: 73.87), controlPoint2: CGPoint(x: 85.4, y: 67.44))
        microphonePath.addCurve(to: CGPoint(x: 128.91, y: 76.52), controlPoint1: CGPoint(x: 108.38, y: 63.08), controlPoint2: CGPoint(x: 122.16, y: 67.44))
        microphonePath.close()
        iconColor.setFill()
        microphonePath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawLightPlaceholderArtistArtwork(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// music sun
        //// sun Drawing
        let sunPath = UIBezierPath(ovalIn: CGRect(x: 19, y: 19, width: 262, height: 262))
        StyleKit.lightTintColor.setFill()
        sunPath.fill()


        //// microphone Drawing
        let microphonePath = UIBezierPath()
        microphonePath.move(to: CGPoint(x: 136.1, y: 101.59))
        microphonePath.addCurve(to: CGPoint(x: 141.48, y: 123.39), controlPoint1: CGPoint(x: 140.83, y: 107.96), controlPoint2: CGPoint(x: 143, y: 115.4))
        microphonePath.addCurve(to: CGPoint(x: 191.53, y: 169.18), controlPoint1: CGPoint(x: 153.62, y: 132.5), controlPoint2: CGPoint(x: 190.04, y: 167.95))
        microphonePath.addCurve(to: CGPoint(x: 192.69, y: 175.86), controlPoint1: CGPoint(x: 193.2, y: 170.57), controlPoint2: CGPoint(x: 193.38, y: 173.26))
        microphonePath.addCurve(to: CGPoint(x: 205.79, y: 191.33), controlPoint1: CGPoint(x: 196.54, y: 179.2), controlPoint2: CGPoint(x: 204.79, y: 186.8))
        microphonePath.addCurve(to: CGPoint(x: 188.11, y: 205.83), controlPoint1: CGPoint(x: 207.1, y: 197.26), controlPoint2: CGPoint(x: 202.51, y: 205.17))
        microphonePath.addCurve(to: CGPoint(x: 140.33, y: 192.03), controlPoint1: CGPoint(x: 173.71, y: 206.49), controlPoint2: CGPoint(x: 160.62, y: 205.87))
        microphonePath.addCurve(to: CGPoint(x: 96.81, y: 190.06), controlPoint1: CGPoint(x: 120.03, y: 178.19), controlPoint2: CGPoint(x: 96.81, y: 190.06))
        microphonePath.addCurve(to: CGPoint(x: 94.85, y: 188.08), controlPoint1: CGPoint(x: 96.81, y: 190.06), controlPoint2: CGPoint(x: 94.85, y: 190.06))
        microphonePath.addCurve(to: CGPoint(x: 96.81, y: 185.44), controlPoint1: CGPoint(x: 94.85, y: 186.1), controlPoint2: CGPoint(x: 96.81, y: 185.44))
        microphonePath.addCurve(to: CGPoint(x: 137.71, y: 185.44), controlPoint1: CGPoint(x: 96.81, y: 185.44), controlPoint2: CGPoint(x: 121.34, y: 176.88))
        microphonePath.addCurve(to: CGPoint(x: 167.82, y: 199.94), controlPoint1: CGPoint(x: 154.07, y: 194.01), controlPoint2: CGPoint(x: 152.76, y: 196.65))
        microphonePath.addCurve(to: CGPoint(x: 199.9, y: 195.94), controlPoint1: CGPoint(x: 182.88, y: 203.24), controlPoint2: CGPoint(x: 194.66, y: 203.19))
        microphonePath.addCurve(to: CGPoint(x: 190.9, y: 179.81), controlPoint1: CGPoint(x: 204.13, y: 190.08), controlPoint2: CGPoint(x: 194.68, y: 182.5))
        microphonePath.addCurve(to: CGPoint(x: 185.43, y: 182.03), controlPoint1: CGPoint(x: 189.4, y: 181.97), controlPoint2: CGPoint(x: 187.35, y: 183.22))
        microphonePath.addCurve(to: CGPoint(x: 127.77, y: 139.72), controlPoint1: CGPoint(x: 183.99, y: 181.15), controlPoint2: CGPoint(x: 127.77, y: 139.72))
        microphonePath.addCurve(to: CGPoint(x: 105.08, y: 137.52), controlPoint1: CGPoint(x: 120.89, y: 143.92), controlPoint2: CGPoint(x: 112.76, y: 142.92))
        microphonePath.addCurve(to: CGPoint(x: 98.38, y: 104.11), controlPoint1: CGPoint(x: 93.53, y: 129.38), controlPoint2: CGPoint(x: 90.52, y: 115.51))
        microphonePath.addCurve(to: CGPoint(x: 113.11, y: 94.53), controlPoint1: CGPoint(x: 101.32, y: 99.85), controlPoint2: CGPoint(x: 107.44, y: 95.61))
        microphonePath.addCurve(to: CGPoint(x: 136.1, y: 101.59), controlPoint1: CGPoint(x: 122.58, y: 92.73), controlPoint2: CGPoint(x: 131.66, y: 95.61))
        microphonePath.close()
        StyleKit.lightGlyphColor.setFill()
        microphonePath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawDarkPlaceholderArtistArtwork(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// album base Drawing
        let albumBasePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 300, height: 300))
        StyleKit.darkBackgroundColor.setFill()
        albumBasePath.fill()


        //// music sun
        //// sun Drawing
        let sunPath = UIBezierPath(ovalIn: CGRect(x: 19, y: 19, width: 262, height: 262))
        StyleKit.darkTintColor.setFill()
        sunPath.fill()


        //// microphone Drawing
        let microphonePath = UIBezierPath()
        microphonePath.move(to: CGPoint(x: 136.1, y: 101.59))
        microphonePath.addCurve(to: CGPoint(x: 141.48, y: 123.39), controlPoint1: CGPoint(x: 140.83, y: 107.96), controlPoint2: CGPoint(x: 143, y: 115.4))
        microphonePath.addCurve(to: CGPoint(x: 191.53, y: 169.18), controlPoint1: CGPoint(x: 153.62, y: 132.5), controlPoint2: CGPoint(x: 190.04, y: 167.95))
        microphonePath.addCurve(to: CGPoint(x: 192.69, y: 175.86), controlPoint1: CGPoint(x: 193.2, y: 170.57), controlPoint2: CGPoint(x: 193.38, y: 173.26))
        microphonePath.addCurve(to: CGPoint(x: 205.79, y: 191.33), controlPoint1: CGPoint(x: 196.54, y: 179.2), controlPoint2: CGPoint(x: 204.79, y: 186.8))
        microphonePath.addCurve(to: CGPoint(x: 188.11, y: 205.83), controlPoint1: CGPoint(x: 207.1, y: 197.26), controlPoint2: CGPoint(x: 202.51, y: 205.17))
        microphonePath.addCurve(to: CGPoint(x: 140.33, y: 192.03), controlPoint1: CGPoint(x: 173.71, y: 206.49), controlPoint2: CGPoint(x: 160.62, y: 205.87))
        microphonePath.addCurve(to: CGPoint(x: 96.81, y: 190.06), controlPoint1: CGPoint(x: 120.03, y: 178.19), controlPoint2: CGPoint(x: 96.81, y: 190.06))
        microphonePath.addCurve(to: CGPoint(x: 94.85, y: 188.08), controlPoint1: CGPoint(x: 96.81, y: 190.06), controlPoint2: CGPoint(x: 94.85, y: 190.06))
        microphonePath.addCurve(to: CGPoint(x: 96.81, y: 185.44), controlPoint1: CGPoint(x: 94.85, y: 186.1), controlPoint2: CGPoint(x: 96.81, y: 185.44))
        microphonePath.addCurve(to: CGPoint(x: 137.71, y: 185.44), controlPoint1: CGPoint(x: 96.81, y: 185.44), controlPoint2: CGPoint(x: 121.34, y: 176.88))
        microphonePath.addCurve(to: CGPoint(x: 167.82, y: 199.94), controlPoint1: CGPoint(x: 154.07, y: 194.01), controlPoint2: CGPoint(x: 152.76, y: 196.65))
        microphonePath.addCurve(to: CGPoint(x: 199.9, y: 195.94), controlPoint1: CGPoint(x: 182.88, y: 203.24), controlPoint2: CGPoint(x: 194.66, y: 203.19))
        microphonePath.addCurve(to: CGPoint(x: 190.9, y: 179.81), controlPoint1: CGPoint(x: 204.13, y: 190.08), controlPoint2: CGPoint(x: 194.68, y: 182.5))
        microphonePath.addCurve(to: CGPoint(x: 185.43, y: 182.03), controlPoint1: CGPoint(x: 189.4, y: 181.97), controlPoint2: CGPoint(x: 187.35, y: 183.22))
        microphonePath.addCurve(to: CGPoint(x: 127.77, y: 139.72), controlPoint1: CGPoint(x: 183.99, y: 181.15), controlPoint2: CGPoint(x: 127.77, y: 139.72))
        microphonePath.addCurve(to: CGPoint(x: 105.08, y: 137.52), controlPoint1: CGPoint(x: 120.89, y: 143.92), controlPoint2: CGPoint(x: 112.76, y: 142.92))
        microphonePath.addCurve(to: CGPoint(x: 98.38, y: 104.11), controlPoint1: CGPoint(x: 93.53, y: 129.38), controlPoint2: CGPoint(x: 90.52, y: 115.51))
        microphonePath.addCurve(to: CGPoint(x: 113.11, y: 94.53), controlPoint1: CGPoint(x: 101.32, y: 99.85), controlPoint2: CGPoint(x: 107.44, y: 95.61))
        microphonePath.addCurve(to: CGPoint(x: 136.1, y: 101.59), controlPoint1: CGPoint(x: 122.58, y: 92.73), controlPoint2: CGPoint(x: 131.66, y: 95.61))
        microphonePath.close()
        StyleKit.darkGlyphColor.setFill()
        microphonePath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawDownIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: 149.85, y: 121.15)
        context.rotate(by: 45 * CGFloat.pi/180)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 53.3, y: -59.35))
        bezierPath.addLine(to: CGPoint(x: 53.69, y: -59.25))
        bezierPath.addCurve(to: CGPoint(x: 59.25, y: -53.69), controlPoint1: CGPoint(x: 56.27, y: -58.31), controlPoint2: CGPoint(x: 58.31, y: -56.27))
        bezierPath.addCurve(to: CGPoint(x: 60, y: -44.71), controlPoint1: CGPoint(x: 60, y: -51.32), controlPoint2: CGPoint(x: 60, y: -49.12))
        bezierPath.addCurve(to: CGPoint(x: 60, y: 40.29), controlPoint1: CGPoint(x: 60, y: -44.71), controlPoint2: CGPoint(x: 60, y: 22.25))
        bezierPath.addCurve(to: CGPoint(x: 60, y: 44.71), controlPoint1: CGPoint(x: 60, y: 43.09), controlPoint2: CGPoint(x: 60, y: 44.71))
        bezierPath.addCurve(to: CGPoint(x: 59.35, y: 53.3), controlPoint1: CGPoint(x: 60, y: 49.12), controlPoint2: CGPoint(x: 60, y: 51.32))
        bezierPath.addLine(to: CGPoint(x: 59.25, y: 53.69))
        bezierPath.addLine(to: CGPoint(x: 59.16, y: 53.93))
        bezierPath.addCurve(to: CGPoint(x: 53.69, y: 59.25), controlPoint1: CGPoint(x: 58.18, y: 56.4), controlPoint2: CGPoint(x: 56.19, y: 58.34))
        bezierPath.addLine(to: CGPoint(x: 53.57, y: 59.29))
        bezierPath.addLine(to: CGPoint(x: 53.46, y: 59.32))
        bezierPath.addLine(to: CGPoint(x: 53.35, y: 59.35))
        bezierPath.addLine(to: CGPoint(x: 53.24, y: 59.38))
        bezierPath.addLine(to: CGPoint(x: 53.13, y: 59.41))
        bezierPath.addLine(to: CGPoint(x: 53.02, y: 59.44))
        bezierPath.addLine(to: CGPoint(x: 52.91, y: 59.47))
        bezierPath.addLine(to: CGPoint(x: 52.8, y: 59.5))
        bezierPath.addLine(to: CGPoint(x: 52.69, y: 59.52))
        bezierPath.addLine(to: CGPoint(x: 52.58, y: 59.55))
        bezierPath.addLine(to: CGPoint(x: 52.47, y: 59.57))
        bezierPath.addLine(to: CGPoint(x: 52.35, y: 59.6))
        bezierPath.addLine(to: CGPoint(x: 52.24, y: 59.62))
        bezierPath.addLine(to: CGPoint(x: 52.13, y: 59.64))
        bezierPath.addLine(to: CGPoint(x: 52.02, y: 59.66))
        bezierPath.addLine(to: CGPoint(x: 51.9, y: 59.68))
        bezierPath.addLine(to: CGPoint(x: 51.79, y: 59.7))
        bezierPath.addLine(to: CGPoint(x: 51.67, y: 59.72))
        bezierPath.addLine(to: CGPoint(x: 51.56, y: 59.74))
        bezierPath.addLine(to: CGPoint(x: 51.44, y: 59.76))
        bezierPath.addLine(to: CGPoint(x: 51.32, y: 59.77))
        bezierPath.addLine(to: CGPoint(x: 51.21, y: 59.79))
        bezierPath.addLine(to: CGPoint(x: 51.09, y: 59.8))
        bezierPath.addLine(to: CGPoint(x: 50.97, y: 59.82))
        bezierPath.addLine(to: CGPoint(x: 50.84, y: 59.83))
        bezierPath.addLine(to: CGPoint(x: 50.72, y: 59.84))
        bezierPath.addLine(to: CGPoint(x: 50.6, y: 59.86))
        bezierPath.addLine(to: CGPoint(x: 50.47, y: 59.87))
        bezierPath.addLine(to: CGPoint(x: 50.35, y: 59.88))
        bezierPath.addLine(to: CGPoint(x: 50.22, y: 59.89))
        bezierPath.addLine(to: CGPoint(x: 50.09, y: 59.9))
        bezierPath.addLine(to: CGPoint(x: 49.96, y: 59.91))
        bezierPath.addLine(to: CGPoint(x: 49.83, y: 59.91))
        bezierPath.addLine(to: CGPoint(x: 49.7, y: 59.92))
        bezierPath.addLine(to: CGPoint(x: 49.56, y: 59.93))
        bezierPath.addLine(to: CGPoint(x: 49.43, y: 59.94))
        bezierPath.addLine(to: CGPoint(x: 49.29, y: 59.94))
        bezierPath.addLine(to: CGPoint(x: 49.15, y: 59.95))
        bezierPath.addLine(to: CGPoint(x: 49.01, y: 59.96))
        bezierPath.addLine(to: CGPoint(x: 48.86, y: 59.96))
        bezierPath.addLine(to: CGPoint(x: 48.72, y: 59.97))
        bezierPath.addLine(to: CGPoint(x: 48.57, y: 59.97))
        bezierPath.addLine(to: CGPoint(x: 48.42, y: 59.97))
        bezierPath.addLine(to: CGPoint(x: 48.27, y: 59.98))
        bezierPath.addLine(to: CGPoint(x: 48.11, y: 59.98))
        bezierPath.addCurve(to: CGPoint(x: 44.71, y: 60), controlPoint1: CGPoint(x: 47.13, y: 60), controlPoint2: CGPoint(x: 46.02, y: 60))
        bezierPath.addLine(to: CGPoint(x: -44.71, y: 60))
        bezierPath.addCurve(to: CGPoint(x: -53.3, y: 59.35), controlPoint1: CGPoint(x: -49.12, y: 60), controlPoint2: CGPoint(x: -51.32, y: 60))
        bezierPath.addLine(to: CGPoint(x: -53.69, y: 59.25))
        bezierPath.addCurve(to: CGPoint(x: -59.25, y: 53.69), controlPoint1: CGPoint(x: -56.27, y: 58.31), controlPoint2: CGPoint(x: -58.31, y: 56.27))
        bezierPath.addCurve(to: CGPoint(x: -60, y: 44.71), controlPoint1: CGPoint(x: -60, y: 51.32), controlPoint2: CGPoint(x: -60, y: 49.12))
        bezierPath.addLine(to: CGPoint(x: -60, y: 40.29))
        bezierPath.addCurve(to: CGPoint(x: -59.35, y: 31.7), controlPoint1: CGPoint(x: -60, y: 35.88), controlPoint2: CGPoint(x: -60, y: 33.68))
        bezierPath.addLine(to: CGPoint(x: -59.25, y: 31.31))
        bezierPath.addCurve(to: CGPoint(x: -53.69, y: 25.75), controlPoint1: CGPoint(x: -58.31, y: 28.73), controlPoint2: CGPoint(x: -56.27, y: 26.69))
        bezierPath.addCurve(to: CGPoint(x: -44.71, y: 25), controlPoint1: CGPoint(x: -51.32, y: 25), controlPoint2: CGPoint(x: -49.12, y: 25))
        bezierPath.addLine(to: CGPoint(x: 25, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 25, y: -44.71), controlPoint1: CGPoint(x: 25, y: -1.33), controlPoint2: CGPoint(x: 25, y: -44.71))
        bezierPath.addCurve(to: CGPoint(x: 25.65, y: -53.3), controlPoint1: CGPoint(x: 25, y: -49.12), controlPoint2: CGPoint(x: 25, y: -51.32))
        bezierPath.addLine(to: CGPoint(x: 25.75, y: -53.69))
        bezierPath.addCurve(to: CGPoint(x: 31.31, y: -59.25), controlPoint1: CGPoint(x: 26.69, y: -56.27), controlPoint2: CGPoint(x: 28.73, y: -58.31))
        bezierPath.addCurve(to: CGPoint(x: 40.29, y: -60), controlPoint1: CGPoint(x: 33.68, y: -60), controlPoint2: CGPoint(x: 35.88, y: -60))
        bezierPath.addLine(to: CGPoint(x: 44.71, y: -60))
        bezierPath.addCurve(to: CGPoint(x: 53.3, y: -59.35), controlPoint1: CGPoint(x: 49.12, y: -60), controlPoint2: CGPoint(x: 51.32, y: -60))
        bezierPath.close()
        iconColor.setFill()
        bezierPath.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawCheckmarkIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: 149.71, y: 135.29)
        context.rotate(by: -45 * CGFloat.pi/180)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: -35.36, y: -39.48))
        bezierPath.addLine(to: CGPoint(x: -35.05, y: -39.4))
        bezierPath.addCurve(to: CGPoint(x: -30.6, y: -34.95), controlPoint1: CGPoint(x: -32.98, y: -38.65), controlPoint2: CGPoint(x: -31.35, y: -37.02))
        bezierPath.addCurve(to: CGPoint(x: -30, y: -27.77), controlPoint1: CGPoint(x: -30, y: -33.05), controlPoint2: CGPoint(x: -30, y: -31.29))
        bezierPath.addCurve(to: CGPoint(x: -30, y: 10), controlPoint1: CGPoint(x: -30, y: -27.77), controlPoint2: CGPoint(x: -30, y: -6.25))
        bezierPath.addLine(to: CGPoint(x: 47.77, y: 10))
        bezierPath.addCurve(to: CGPoint(x: 54.64, y: 10.52), controlPoint1: CGPoint(x: 51.29, y: 10), controlPoint2: CGPoint(x: 53.05, y: 10))
        bezierPath.addLine(to: CGPoint(x: 54.95, y: 10.6))
        bezierPath.addCurve(to: CGPoint(x: 59.4, y: 15.05), controlPoint1: CGPoint(x: 57.02, y: 11.35), controlPoint2: CGPoint(x: 58.65, y: 12.98))
        bezierPath.addCurve(to: CGPoint(x: 60, y: 22.23), controlPoint1: CGPoint(x: 60, y: 16.95), controlPoint2: CGPoint(x: 60, y: 18.71))
        bezierPath.addLine(to: CGPoint(x: 60, y: 27.77))
        bezierPath.addCurve(to: CGPoint(x: 59.48, y: 34.64), controlPoint1: CGPoint(x: 60, y: 31.29), controlPoint2: CGPoint(x: 60, y: 33.05))
        bezierPath.addLine(to: CGPoint(x: 59.4, y: 34.95))
        bezierPath.addCurve(to: CGPoint(x: 54.95, y: 39.4), controlPoint1: CGPoint(x: 58.65, y: 37.02), controlPoint2: CGPoint(x: 57.02, y: 38.65))
        bezierPath.addCurve(to: CGPoint(x: 47.77, y: 40), controlPoint1: CGPoint(x: 53.05, y: 40), controlPoint2: CGPoint(x: 51.29, y: 40))
        bezierPath.addLine(to: CGPoint(x: -47.77, y: 40))
        bezierPath.addLine(to: CGPoint(x: -47.93, y: 40))
        bezierPath.addLine(to: CGPoint(x: -48.1, y: 40))
        bezierPath.addLine(to: CGPoint(x: -48.25, y: 40))
        bezierPath.addLine(to: CGPoint(x: -48.41, y: 40))
        bezierPath.addLine(to: CGPoint(x: -48.56, y: 40))
        bezierPath.addLine(to: CGPoint(x: -48.72, y: 40))
        bezierPath.addLine(to: CGPoint(x: -48.87, y: 40))
        bezierPath.addLine(to: CGPoint(x: -49.01, y: 40))
        bezierPath.addLine(to: CGPoint(x: -49.16, y: 40))
        bezierPath.addLine(to: CGPoint(x: -49.3, y: 40))
        bezierPath.addLine(to: CGPoint(x: -49.44, y: 40))
        bezierPath.addLine(to: CGPoint(x: -49.58, y: 40))
        bezierPath.addLine(to: CGPoint(x: -49.71, y: 40))
        bezierPath.addLine(to: CGPoint(x: -49.85, y: 39.99))
        bezierPath.addLine(to: CGPoint(x: -49.98, y: 39.99))
        bezierPath.addLine(to: CGPoint(x: -50.11, y: 39.99))
        bezierPath.addLine(to: CGPoint(x: -50.23, y: 39.99))
        bezierPath.addLine(to: CGPoint(x: -50.36, y: 39.99))
        bezierPath.addLine(to: CGPoint(x: -50.48, y: 39.99))
        bezierPath.addLine(to: CGPoint(x: -50.6, y: 39.98))
        bezierPath.addLine(to: CGPoint(x: -50.72, y: 39.98))
        bezierPath.addLine(to: CGPoint(x: -50.84, y: 39.98))
        bezierPath.addLine(to: CGPoint(x: -50.96, y: 39.98))
        bezierPath.addLine(to: CGPoint(x: -51.07, y: 39.97))
        bezierPath.addLine(to: CGPoint(x: -51.19, y: 39.97))
        bezierPath.addLine(to: CGPoint(x: -51.3, y: 39.96))
        bezierPath.addLine(to: CGPoint(x: -51.41, y: 39.96))
        bezierPath.addLine(to: CGPoint(x: -51.51, y: 39.96))
        bezierPath.addLine(to: CGPoint(x: -51.62, y: 39.95))
        bezierPath.addLine(to: CGPoint(x: -51.73, y: 39.95))
        bezierPath.addLine(to: CGPoint(x: -51.83, y: 39.94))
        bezierPath.addLine(to: CGPoint(x: -51.93, y: 39.93))
        bezierPath.addLine(to: CGPoint(x: -52.03, y: 39.93))
        bezierPath.addLine(to: CGPoint(x: -52.13, y: 39.92))
        bezierPath.addLine(to: CGPoint(x: -52.23, y: 39.91))
        bezierPath.addLine(to: CGPoint(x: -52.32, y: 39.91))
        bezierPath.addLine(to: CGPoint(x: -52.42, y: 39.9))
        bezierPath.addLine(to: CGPoint(x: -52.51, y: 39.89))
        bezierPath.addLine(to: CGPoint(x: -52.61, y: 39.88))
        bezierPath.addLine(to: CGPoint(x: -52.7, y: 39.87))
        bezierPath.addLine(to: CGPoint(x: -52.79, y: 39.86))
        bezierPath.addLine(to: CGPoint(x: -52.88, y: 39.85))
        bezierPath.addLine(to: CGPoint(x: -52.97, y: 39.84))
        bezierPath.addLine(to: CGPoint(x: -53.05, y: 39.83))
        bezierPath.addLine(to: CGPoint(x: -53.14, y: 39.82))
        bezierPath.addLine(to: CGPoint(x: -53.22, y: 39.81))
        bezierPath.addLine(to: CGPoint(x: -53.31, y: 39.79))
        bezierPath.addLine(to: CGPoint(x: -53.39, y: 39.78))
        bezierPath.addLine(to: CGPoint(x: -53.48, y: 39.76))
        bezierPath.addLine(to: CGPoint(x: -53.56, y: 39.75))
        bezierPath.addLine(to: CGPoint(x: -53.64, y: 39.73))
        bezierPath.addLine(to: CGPoint(x: -53.72, y: 39.72))
        bezierPath.addLine(to: CGPoint(x: -53.8, y: 39.7))
        bezierPath.addLine(to: CGPoint(x: -53.88, y: 39.69))
        bezierPath.addLine(to: CGPoint(x: -53.96, y: 39.67))
        bezierPath.addLine(to: CGPoint(x: -54.03, y: 39.65))
        bezierPath.addLine(to: CGPoint(x: -54.11, y: 39.63))
        bezierPath.addLine(to: CGPoint(x: -54.19, y: 39.61))
        bezierPath.addLine(to: CGPoint(x: -54.26, y: 39.59))
        bezierPath.addLine(to: CGPoint(x: -54.34, y: 39.57))
        bezierPath.addLine(to: CGPoint(x: -54.42, y: 39.55))
        bezierPath.addLine(to: CGPoint(x: -54.49, y: 39.52))
        bezierPath.addLine(to: CGPoint(x: -54.57, y: 39.5))
        bezierPath.addLine(to: CGPoint(x: -54.64, y: 39.48))
        bezierPath.addLine(to: CGPoint(x: -54.95, y: 39.4))
        bezierPath.addCurve(to: CGPoint(x: -59.4, y: 34.95), controlPoint1: CGPoint(x: -57.02, y: 38.65), controlPoint2: CGPoint(x: -58.65, y: 37.02))
        bezierPath.addLine(to: CGPoint(x: -59.43, y: 34.86))
        bezierPath.addLine(to: CGPoint(x: -59.46, y: 34.77))
        bezierPath.addLine(to: CGPoint(x: -59.48, y: 34.68))
        bezierPath.addLine(to: CGPoint(x: -59.51, y: 34.59))
        bezierPath.addLine(to: CGPoint(x: -59.53, y: 34.51))
        bezierPath.addLine(to: CGPoint(x: -59.55, y: 34.42))
        bezierPath.addLine(to: CGPoint(x: -59.58, y: 34.33))
        bezierPath.addLine(to: CGPoint(x: -59.6, y: 34.24))
        bezierPath.addLine(to: CGPoint(x: -59.62, y: 34.15))
        bezierPath.addLine(to: CGPoint(x: -59.64, y: 34.06))
        bezierPath.addLine(to: CGPoint(x: -59.66, y: 33.97))
        bezierPath.addLine(to: CGPoint(x: -59.68, y: 33.88))
        bezierPath.addLine(to: CGPoint(x: -59.7, y: 33.79))
        bezierPath.addLine(to: CGPoint(x: -59.71, y: 33.7))
        bezierPath.addLine(to: CGPoint(x: -59.73, y: 33.61))
        bezierPath.addLine(to: CGPoint(x: -59.75, y: 33.52))
        bezierPath.addLine(to: CGPoint(x: -59.76, y: 33.43))
        bezierPath.addLine(to: CGPoint(x: -59.78, y: 33.34))
        bezierPath.addLine(to: CGPoint(x: -59.79, y: 33.25))
        bezierPath.addLine(to: CGPoint(x: -59.81, y: 33.15))
        bezierPath.addLine(to: CGPoint(x: -59.82, y: 33.06))
        bezierPath.addLine(to: CGPoint(x: -59.83, y: 32.96))
        bezierPath.addLine(to: CGPoint(x: -59.84, y: 32.87))
        bezierPath.addLine(to: CGPoint(x: -59.85, y: 32.77))
        bezierPath.addLine(to: CGPoint(x: -59.86, y: 32.68))
        bezierPath.addLine(to: CGPoint(x: -59.87, y: 32.58))
        bezierPath.addLine(to: CGPoint(x: -59.88, y: 32.48))
        bezierPath.addLine(to: CGPoint(x: -59.89, y: 32.38))
        bezierPath.addLine(to: CGPoint(x: -59.9, y: 32.28))
        bezierPath.addLine(to: CGPoint(x: -59.91, y: 32.18))
        bezierPath.addLine(to: CGPoint(x: -59.92, y: 32.07))
        bezierPath.addLine(to: CGPoint(x: -59.93, y: 31.97))
        bezierPath.addLine(to: CGPoint(x: -59.93, y: 31.86))
        bezierPath.addLine(to: CGPoint(x: -59.94, y: 31.76))
        bezierPath.addLine(to: CGPoint(x: -59.94, y: 31.65))
        bezierPath.addLine(to: CGPoint(x: -59.95, y: 31.54))
        bezierPath.addLine(to: CGPoint(x: -59.96, y: 31.43))
        bezierPath.addLine(to: CGPoint(x: -59.96, y: 31.32))
        bezierPath.addLine(to: CGPoint(x: -59.96, y: 31.2))
        bezierPath.addLine(to: CGPoint(x: -59.97, y: 31.09))
        bezierPath.addLine(to: CGPoint(x: -59.97, y: 30.97))
        bezierPath.addLine(to: CGPoint(x: -59.98, y: 30.85))
        bezierPath.addLine(to: CGPoint(x: -59.98, y: 30.74))
        bezierPath.addLine(to: CGPoint(x: -59.98, y: 30.61))
        bezierPath.addLine(to: CGPoint(x: -59.98, y: 30.49))
        bezierPath.addLine(to: CGPoint(x: -59.99, y: 30.37))
        bezierPath.addLine(to: CGPoint(x: -59.99, y: 30.24))
        bezierPath.addLine(to: CGPoint(x: -59.99, y: 30.11))
        bezierPath.addLine(to: CGPoint(x: -59.99, y: 29.98))
        bezierPath.addLine(to: CGPoint(x: -59.99, y: 29.85))
        bezierPath.addLine(to: CGPoint(x: -59.99, y: 29.71))
        bezierPath.addLine(to: CGPoint(x: -60, y: 29.58))
        bezierPath.addLine(to: CGPoint(x: -60, y: 29.44))
        bezierPath.addLine(to: CGPoint(x: -60, y: 29.3))
        bezierPath.addLine(to: CGPoint(x: -60, y: 29.16))
        bezierPath.addLine(to: CGPoint(x: -60, y: 29.01))
        bezierPath.addLine(to: CGPoint(x: -60, y: 28.87))
        bezierPath.addLine(to: CGPoint(x: -60, y: 28.72))
        bezierPath.addLine(to: CGPoint(x: -60, y: 28.56))
        bezierPath.addLine(to: CGPoint(x: -60, y: 28.41))
        bezierPath.addLine(to: CGPoint(x: -60, y: 28.25))
        bezierPath.addLine(to: CGPoint(x: -60, y: 28.1))
        bezierPath.addLine(to: CGPoint(x: -60, y: 27.93))
        bezierPath.addLine(to: CGPoint(x: -60, y: 27.77))
        bezierPath.addLine(to: CGPoint(x: -60, y: 22.23))
        bezierPath.addCurve(to: CGPoint(x: -60, y: -27.77), controlPoint1: CGPoint(x: -60, y: 8.17), controlPoint2: CGPoint(x: -60, y: -27.77))
        bezierPath.addCurve(to: CGPoint(x: -59.48, y: -34.64), controlPoint1: CGPoint(x: -60, y: -31.29), controlPoint2: CGPoint(x: -60, y: -33.05))
        bezierPath.addLine(to: CGPoint(x: -59.4, y: -34.95))
        bezierPath.addCurve(to: CGPoint(x: -54.95, y: -39.4), controlPoint1: CGPoint(x: -58.65, y: -37.02), controlPoint2: CGPoint(x: -57.02, y: -38.65))
        bezierPath.addCurve(to: CGPoint(x: -47.77, y: -40), controlPoint1: CGPoint(x: -53.05, y: -40), controlPoint2: CGPoint(x: -51.29, y: -40))
        bezierPath.addLine(to: CGPoint(x: -42.23, y: -40))
        bezierPath.addCurve(to: CGPoint(x: -35.36, y: -39.48), controlPoint1: CGPoint(x: -38.71, y: -40), controlPoint2: CGPoint(x: -36.95, y: -40))
        bezierPath.close()
        iconColor.setFill()
        bezierPath.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawRightIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: 130.85, y: 150.15)
        context.rotate(by: -45 * CGFloat.pi/180)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 53.3, y: -59.35))
        bezierPath.addLine(to: CGPoint(x: 53.69, y: -59.25))
        bezierPath.addCurve(to: CGPoint(x: 59.25, y: -53.69), controlPoint1: CGPoint(x: 56.27, y: -58.31), controlPoint2: CGPoint(x: 58.31, y: -56.27))
        bezierPath.addCurve(to: CGPoint(x: 60, y: -44.71), controlPoint1: CGPoint(x: 60, y: -51.32), controlPoint2: CGPoint(x: 60, y: -49.12))
        bezierPath.addCurve(to: CGPoint(x: 60, y: 40.29), controlPoint1: CGPoint(x: 60, y: -44.71), controlPoint2: CGPoint(x: 60, y: 22.25))
        bezierPath.addCurve(to: CGPoint(x: 60, y: 44.71), controlPoint1: CGPoint(x: 60, y: 43.09), controlPoint2: CGPoint(x: 60, y: 44.71))
        bezierPath.addCurve(to: CGPoint(x: 59.35, y: 53.3), controlPoint1: CGPoint(x: 60, y: 49.12), controlPoint2: CGPoint(x: 60, y: 51.32))
        bezierPath.addLine(to: CGPoint(x: 59.25, y: 53.69))
        bezierPath.addLine(to: CGPoint(x: 59.16, y: 53.93))
        bezierPath.addCurve(to: CGPoint(x: 53.69, y: 59.25), controlPoint1: CGPoint(x: 58.18, y: 56.4), controlPoint2: CGPoint(x: 56.19, y: 58.34))
        bezierPath.addLine(to: CGPoint(x: 53.57, y: 59.29))
        bezierPath.addLine(to: CGPoint(x: 53.46, y: 59.32))
        bezierPath.addLine(to: CGPoint(x: 53.35, y: 59.35))
        bezierPath.addLine(to: CGPoint(x: 53.24, y: 59.38))
        bezierPath.addLine(to: CGPoint(x: 53.13, y: 59.41))
        bezierPath.addLine(to: CGPoint(x: 53.02, y: 59.44))
        bezierPath.addLine(to: CGPoint(x: 52.91, y: 59.47))
        bezierPath.addLine(to: CGPoint(x: 52.8, y: 59.5))
        bezierPath.addLine(to: CGPoint(x: 52.69, y: 59.52))
        bezierPath.addLine(to: CGPoint(x: 52.58, y: 59.55))
        bezierPath.addLine(to: CGPoint(x: 52.47, y: 59.57))
        bezierPath.addLine(to: CGPoint(x: 52.35, y: 59.6))
        bezierPath.addLine(to: CGPoint(x: 52.24, y: 59.62))
        bezierPath.addLine(to: CGPoint(x: 52.13, y: 59.64))
        bezierPath.addLine(to: CGPoint(x: 52.02, y: 59.66))
        bezierPath.addLine(to: CGPoint(x: 51.9, y: 59.68))
        bezierPath.addLine(to: CGPoint(x: 51.79, y: 59.7))
        bezierPath.addLine(to: CGPoint(x: 51.67, y: 59.72))
        bezierPath.addLine(to: CGPoint(x: 51.56, y: 59.74))
        bezierPath.addLine(to: CGPoint(x: 51.44, y: 59.76))
        bezierPath.addLine(to: CGPoint(x: 51.32, y: 59.77))
        bezierPath.addLine(to: CGPoint(x: 51.21, y: 59.79))
        bezierPath.addLine(to: CGPoint(x: 51.09, y: 59.8))
        bezierPath.addLine(to: CGPoint(x: 50.97, y: 59.82))
        bezierPath.addLine(to: CGPoint(x: 50.84, y: 59.83))
        bezierPath.addLine(to: CGPoint(x: 50.72, y: 59.84))
        bezierPath.addLine(to: CGPoint(x: 50.6, y: 59.86))
        bezierPath.addLine(to: CGPoint(x: 50.47, y: 59.87))
        bezierPath.addLine(to: CGPoint(x: 50.35, y: 59.88))
        bezierPath.addLine(to: CGPoint(x: 50.22, y: 59.89))
        bezierPath.addLine(to: CGPoint(x: 50.09, y: 59.9))
        bezierPath.addLine(to: CGPoint(x: 49.96, y: 59.91))
        bezierPath.addLine(to: CGPoint(x: 49.83, y: 59.91))
        bezierPath.addLine(to: CGPoint(x: 49.7, y: 59.92))
        bezierPath.addLine(to: CGPoint(x: 49.56, y: 59.93))
        bezierPath.addLine(to: CGPoint(x: 49.43, y: 59.94))
        bezierPath.addLine(to: CGPoint(x: 49.29, y: 59.94))
        bezierPath.addLine(to: CGPoint(x: 49.15, y: 59.95))
        bezierPath.addLine(to: CGPoint(x: 49.01, y: 59.96))
        bezierPath.addLine(to: CGPoint(x: 48.86, y: 59.96))
        bezierPath.addLine(to: CGPoint(x: 48.72, y: 59.97))
        bezierPath.addLine(to: CGPoint(x: 48.57, y: 59.97))
        bezierPath.addLine(to: CGPoint(x: 48.42, y: 59.97))
        bezierPath.addLine(to: CGPoint(x: 48.27, y: 59.98))
        bezierPath.addLine(to: CGPoint(x: 48.11, y: 59.98))
        bezierPath.addCurve(to: CGPoint(x: 44.71, y: 60), controlPoint1: CGPoint(x: 47.13, y: 60), controlPoint2: CGPoint(x: 46.02, y: 60))
        bezierPath.addLine(to: CGPoint(x: -44.71, y: 60))
        bezierPath.addCurve(to: CGPoint(x: -53.3, y: 59.35), controlPoint1: CGPoint(x: -49.12, y: 60), controlPoint2: CGPoint(x: -51.32, y: 60))
        bezierPath.addLine(to: CGPoint(x: -53.69, y: 59.25))
        bezierPath.addCurve(to: CGPoint(x: -59.25, y: 53.69), controlPoint1: CGPoint(x: -56.27, y: 58.31), controlPoint2: CGPoint(x: -58.31, y: 56.27))
        bezierPath.addCurve(to: CGPoint(x: -60, y: 44.71), controlPoint1: CGPoint(x: -60, y: 51.32), controlPoint2: CGPoint(x: -60, y: 49.12))
        bezierPath.addLine(to: CGPoint(x: -60, y: 40.29))
        bezierPath.addCurve(to: CGPoint(x: -59.35, y: 31.7), controlPoint1: CGPoint(x: -60, y: 35.88), controlPoint2: CGPoint(x: -60, y: 33.68))
        bezierPath.addLine(to: CGPoint(x: -59.25, y: 31.31))
        bezierPath.addCurve(to: CGPoint(x: -53.69, y: 25.75), controlPoint1: CGPoint(x: -58.31, y: 28.73), controlPoint2: CGPoint(x: -56.27, y: 26.69))
        bezierPath.addCurve(to: CGPoint(x: -44.71, y: 25), controlPoint1: CGPoint(x: -51.32, y: 25), controlPoint2: CGPoint(x: -49.12, y: 25))
        bezierPath.addLine(to: CGPoint(x: 25, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 25, y: -44.71), controlPoint1: CGPoint(x: 25, y: -1.33), controlPoint2: CGPoint(x: 25, y: -44.71))
        bezierPath.addCurve(to: CGPoint(x: 25.65, y: -53.3), controlPoint1: CGPoint(x: 25, y: -49.12), controlPoint2: CGPoint(x: 25, y: -51.32))
        bezierPath.addLine(to: CGPoint(x: 25.75, y: -53.69))
        bezierPath.addCurve(to: CGPoint(x: 31.31, y: -59.25), controlPoint1: CGPoint(x: 26.69, y: -56.27), controlPoint2: CGPoint(x: 28.73, y: -58.31))
        bezierPath.addCurve(to: CGPoint(x: 40.29, y: -60), controlPoint1: CGPoint(x: 33.68, y: -60), controlPoint2: CGPoint(x: 35.88, y: -60))
        bezierPath.addLine(to: CGPoint(x: 44.71, y: -60))
        bezierPath.addCurve(to: CGPoint(x: 53.3, y: -59.35), controlPoint1: CGPoint(x: 49.12, y: -60), controlPoint2: CGPoint(x: 51.32, y: -60))
        bezierPath.close()
        iconColor.setFill()
        bezierPath.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawUpIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: 149.85, y: 178.15)
        context.rotate(by: -135 * CGFloat.pi/180)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 53.3, y: -59.35))
        bezierPath.addLine(to: CGPoint(x: 53.69, y: -59.25))
        bezierPath.addCurve(to: CGPoint(x: 59.25, y: -53.69), controlPoint1: CGPoint(x: 56.27, y: -58.31), controlPoint2: CGPoint(x: 58.31, y: -56.27))
        bezierPath.addCurve(to: CGPoint(x: 60, y: -44.71), controlPoint1: CGPoint(x: 60, y: -51.32), controlPoint2: CGPoint(x: 60, y: -49.12))
        bezierPath.addCurve(to: CGPoint(x: 60, y: 40.29), controlPoint1: CGPoint(x: 60, y: -44.71), controlPoint2: CGPoint(x: 60, y: 22.25))
        bezierPath.addCurve(to: CGPoint(x: 60, y: 44.71), controlPoint1: CGPoint(x: 60, y: 43.09), controlPoint2: CGPoint(x: 60, y: 44.71))
        bezierPath.addCurve(to: CGPoint(x: 59.35, y: 53.3), controlPoint1: CGPoint(x: 60, y: 49.12), controlPoint2: CGPoint(x: 60, y: 51.32))
        bezierPath.addLine(to: CGPoint(x: 59.25, y: 53.69))
        bezierPath.addLine(to: CGPoint(x: 59.16, y: 53.93))
        bezierPath.addCurve(to: CGPoint(x: 53.69, y: 59.25), controlPoint1: CGPoint(x: 58.18, y: 56.4), controlPoint2: CGPoint(x: 56.19, y: 58.34))
        bezierPath.addLine(to: CGPoint(x: 53.57, y: 59.29))
        bezierPath.addLine(to: CGPoint(x: 53.46, y: 59.32))
        bezierPath.addLine(to: CGPoint(x: 53.35, y: 59.35))
        bezierPath.addLine(to: CGPoint(x: 53.24, y: 59.38))
        bezierPath.addLine(to: CGPoint(x: 53.13, y: 59.41))
        bezierPath.addLine(to: CGPoint(x: 53.02, y: 59.44))
        bezierPath.addLine(to: CGPoint(x: 52.91, y: 59.47))
        bezierPath.addLine(to: CGPoint(x: 52.8, y: 59.5))
        bezierPath.addLine(to: CGPoint(x: 52.69, y: 59.52))
        bezierPath.addLine(to: CGPoint(x: 52.58, y: 59.55))
        bezierPath.addLine(to: CGPoint(x: 52.47, y: 59.57))
        bezierPath.addLine(to: CGPoint(x: 52.35, y: 59.6))
        bezierPath.addLine(to: CGPoint(x: 52.24, y: 59.62))
        bezierPath.addLine(to: CGPoint(x: 52.13, y: 59.64))
        bezierPath.addLine(to: CGPoint(x: 52.02, y: 59.66))
        bezierPath.addLine(to: CGPoint(x: 51.9, y: 59.68))
        bezierPath.addLine(to: CGPoint(x: 51.79, y: 59.7))
        bezierPath.addLine(to: CGPoint(x: 51.67, y: 59.72))
        bezierPath.addLine(to: CGPoint(x: 51.56, y: 59.74))
        bezierPath.addLine(to: CGPoint(x: 51.44, y: 59.76))
        bezierPath.addLine(to: CGPoint(x: 51.32, y: 59.77))
        bezierPath.addLine(to: CGPoint(x: 51.21, y: 59.79))
        bezierPath.addLine(to: CGPoint(x: 51.09, y: 59.8))
        bezierPath.addLine(to: CGPoint(x: 50.97, y: 59.82))
        bezierPath.addLine(to: CGPoint(x: 50.84, y: 59.83))
        bezierPath.addLine(to: CGPoint(x: 50.72, y: 59.84))
        bezierPath.addLine(to: CGPoint(x: 50.6, y: 59.86))
        bezierPath.addLine(to: CGPoint(x: 50.47, y: 59.87))
        bezierPath.addLine(to: CGPoint(x: 50.35, y: 59.88))
        bezierPath.addLine(to: CGPoint(x: 50.22, y: 59.89))
        bezierPath.addLine(to: CGPoint(x: 50.09, y: 59.9))
        bezierPath.addLine(to: CGPoint(x: 49.96, y: 59.91))
        bezierPath.addLine(to: CGPoint(x: 49.83, y: 59.91))
        bezierPath.addLine(to: CGPoint(x: 49.7, y: 59.92))
        bezierPath.addLine(to: CGPoint(x: 49.56, y: 59.93))
        bezierPath.addLine(to: CGPoint(x: 49.43, y: 59.94))
        bezierPath.addLine(to: CGPoint(x: 49.29, y: 59.94))
        bezierPath.addLine(to: CGPoint(x: 49.15, y: 59.95))
        bezierPath.addLine(to: CGPoint(x: 49.01, y: 59.96))
        bezierPath.addLine(to: CGPoint(x: 48.86, y: 59.96))
        bezierPath.addLine(to: CGPoint(x: 48.72, y: 59.97))
        bezierPath.addLine(to: CGPoint(x: 48.57, y: 59.97))
        bezierPath.addLine(to: CGPoint(x: 48.42, y: 59.97))
        bezierPath.addLine(to: CGPoint(x: 48.27, y: 59.98))
        bezierPath.addLine(to: CGPoint(x: 48.11, y: 59.98))
        bezierPath.addCurve(to: CGPoint(x: 44.71, y: 60), controlPoint1: CGPoint(x: 47.13, y: 60), controlPoint2: CGPoint(x: 46.02, y: 60))
        bezierPath.addLine(to: CGPoint(x: -44.71, y: 60))
        bezierPath.addCurve(to: CGPoint(x: -53.3, y: 59.35), controlPoint1: CGPoint(x: -49.12, y: 60), controlPoint2: CGPoint(x: -51.32, y: 60))
        bezierPath.addLine(to: CGPoint(x: -53.69, y: 59.25))
        bezierPath.addCurve(to: CGPoint(x: -59.25, y: 53.69), controlPoint1: CGPoint(x: -56.27, y: 58.31), controlPoint2: CGPoint(x: -58.31, y: 56.27))
        bezierPath.addCurve(to: CGPoint(x: -60, y: 44.71), controlPoint1: CGPoint(x: -60, y: 51.32), controlPoint2: CGPoint(x: -60, y: 49.12))
        bezierPath.addLine(to: CGPoint(x: -60, y: 40.29))
        bezierPath.addCurve(to: CGPoint(x: -59.35, y: 31.7), controlPoint1: CGPoint(x: -60, y: 35.88), controlPoint2: CGPoint(x: -60, y: 33.68))
        bezierPath.addLine(to: CGPoint(x: -59.25, y: 31.31))
        bezierPath.addCurve(to: CGPoint(x: -53.69, y: 25.75), controlPoint1: CGPoint(x: -58.31, y: 28.73), controlPoint2: CGPoint(x: -56.27, y: 26.69))
        bezierPath.addCurve(to: CGPoint(x: -44.71, y: 25), controlPoint1: CGPoint(x: -51.32, y: 25), controlPoint2: CGPoint(x: -49.12, y: 25))
        bezierPath.addLine(to: CGPoint(x: 25, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 25, y: -44.71), controlPoint1: CGPoint(x: 25, y: -1.33), controlPoint2: CGPoint(x: 25, y: -44.71))
        bezierPath.addCurve(to: CGPoint(x: 25.65, y: -53.3), controlPoint1: CGPoint(x: 25, y: -49.12), controlPoint2: CGPoint(x: 25, y: -51.32))
        bezierPath.addLine(to: CGPoint(x: 25.75, y: -53.69))
        bezierPath.addCurve(to: CGPoint(x: 31.31, y: -59.25), controlPoint1: CGPoint(x: 26.69, y: -56.27), controlPoint2: CGPoint(x: 28.73, y: -58.31))
        bezierPath.addCurve(to: CGPoint(x: 40.29, y: -60), controlPoint1: CGPoint(x: 33.68, y: -60), controlPoint2: CGPoint(x: 35.88, y: -60))
        bezierPath.addLine(to: CGPoint(x: 44.71, y: -60))
        bezierPath.addCurve(to: CGPoint(x: 53.3, y: -59.35), controlPoint1: CGPoint(x: 49.12, y: -60), controlPoint2: CGPoint(x: 51.32, y: -60))
        bezierPath.close()
        iconColor.setFill()
        bezierPath.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawDarkBackdrop(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 1024, height: 1024), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 1024, height: 1024), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 1024, y: resizedFrame.height / 1024)


        //// Group 2
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 658.8, y: 935.36))
        bezierPath.addCurve(to: CGPoint(x: 795.34, y: 668.23), controlPoint1: CGPoint(x: 743.37, y: 883.08), controlPoint2: CGPoint(x: 795.34, y: 785.1))
        bezierPath.addCurve(to: CGPoint(x: 630.14, y: 357.58), controlPoint1: CGPoint(x: 795.34, y: 557.22), controlPoint2: CGPoint(x: 733.57, y: 468.36))
        bezierPath.addCurve(to: CGPoint(x: 518.46, y: 169.36), controlPoint1: CGPoint(x: 518.46, y: 237.95), controlPoint2: CGPoint(x: 518.46, y: 169.36))
        bezierPath.addCurve(to: CGPoint(x: 401.41, y: 357.58), controlPoint1: CGPoint(x: 518.46, y: 169.36), controlPoint2: CGPoint(x: 505.12, y: 234.49))
        bezierPath.addCurve(to: CGPoint(x: 231.14, y: 668.23), controlPoint1: CGPoint(x: 310.9, y: 465), controlPoint2: CGPoint(x: 231.14, y: 545.42))
        bezierPath.addCurve(to: CGPoint(x: 366.36, y: 935.76), controlPoint1: CGPoint(x: 231.14, y: 781.85), controlPoint2: CGPoint(x: 281.7, y: 882.42))
        bezierPath.addCurve(to: CGPoint(x: 64, y: 512), controlPoint1: CGPoint(x: 190.5, y: 875.25), controlPoint2: CGPoint(x: 64, y: 708.28))
        bezierPath.addCurve(to: CGPoint(x: 512, y: 64), controlPoint1: CGPoint(x: 64, y: 264.75), controlPoint2: CGPoint(x: 264.74, y: 64))
        bezierPath.addCurve(to: CGPoint(x: 960, y: 512), controlPoint1: CGPoint(x: 759.26, y: 64), controlPoint2: CGPoint(x: 960, y: 264.75))
        bezierPath.addCurve(to: CGPoint(x: 658.8, y: 935.36), controlPoint1: CGPoint(x: 960, y: 707.85), controlPoint2: CGPoint(x: 834.05, y: 874.52))
        bezierPath.close()
        bezierPath.usesEvenOddFillRule = true
        StyleKit.darkTintColor.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 505.91, y: 959.96))
        bezier2Path.addCurve(to: CGPoint(x: 405.56, y: 901.47), controlPoint1: CGPoint(x: 462.03, y: 959.96), controlPoint2: CGPoint(x: 414.49, y: 941.89))
        bezier2Path.addCurve(to: CGPoint(x: 403.22, y: 880.87), controlPoint1: CGPoint(x: 404.22, y: 895.37), controlPoint2: CGPoint(x: 403.24, y: 885.88))
        bezier2Path.addCurve(to: CGPoint(x: 558.91, y: 776.63), controlPoint1: CGPoint(x: 402.48, y: 758.37), controlPoint2: CGPoint(x: 564.72, y: 789.36))
        bezier2Path.addCurve(to: CGPoint(x: 419.49, y: 521.07), controlPoint1: CGPoint(x: 530.22, y: 713.7), controlPoint2: CGPoint(x: 483.92, y: 624.74))
        bezier2Path.addCurve(to: CGPoint(x: 406.3, y: 469.59), controlPoint1: CGPoint(x: 403.48, y: 495.29), controlPoint2: CGPoint(x: 399.5, y: 482.64))
        bezier2Path.addCurve(to: CGPoint(x: 445.77, y: 447.43), controlPoint1: CGPoint(x: 412.32, y: 458.03), controlPoint2: CGPoint(x: 436.18, y: 450.97))
        bezier2Path.addCurve(to: CGPoint(x: 555.2, y: 410.19), controlPoint1: CGPoint(x: 487.54, y: 431.98), controlPoint2: CGPoint(x: 494.77, y: 428.78))
        bezier2Path.addCurve(to: CGPoint(x: 589.32, y: 416.09), controlPoint1: CGPoint(x: 572.62, y: 404.83), controlPoint2: CGPoint(x: 577.61, y: 404.29))
        bezier2Path.addCurve(to: CGPoint(x: 637.77, y: 469.59), controlPoint1: CGPoint(x: 602.85, y: 429.71), controlPoint2: CGPoint(x: 619.32, y: 445.28))
        bezier2Path.addCurve(to: CGPoint(x: 602.61, y: 525.3), controlPoint1: CGPoint(x: 660.4, y: 499.4), controlPoint2: CGPoint(x: 659.4, y: 511.57))
        bezier2Path.addCurve(to: CGPoint(x: 495.72, y: 560.89), controlPoint1: CGPoint(x: 554.17, y: 537.01), controlPoint2: CGPoint(x: 488.16, y: 547.16))
        bezier2Path.addCurve(to: CGPoint(x: 589.2, y: 739.88), controlPoint1: CGPoint(x: 502.47, y: 573.19), controlPoint2: CGPoint(x: 550.75, y: 661.73))
        bezier2Path.addCurve(to: CGPoint(x: 624.33, y: 852.42), controlPoint1: CGPoint(x: 607.18, y: 776.44), controlPoint2: CGPoint(x: 624.33, y: 818.2))
        bezier2Path.addCurve(to: CGPoint(x: 505.91, y: 959.96), controlPoint1: CGPoint(x: 624.33, y: 913.85), controlPoint2: CGPoint(x: 596.03, y: 959.96))
        bezier2Path.close()
        bezier2Path.usesEvenOddFillRule = true
        StyleKit.lightTintColor.setFill()
        bezier2Path.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawDisplayBrightnessMinIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 110, y: 110, width: 80, height: 80))
        iconColor.setFill()
        ovalPath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawDisplayBrightnessMaxIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 154.43, y: 69.43))
        bezierPath.addLine(to: CGPoint(x: 154.43, y: 82.71))
        bezierPath.addCurve(to: CGPoint(x: 154.43, y: 95.99), controlPoint1: CGPoint(x: 154.43, y: 95.99), controlPoint2: CGPoint(x: 154.43, y: 95.99))
        bezierPath.addCurve(to: CGPoint(x: 150, y: 100.42), controlPoint1: CGPoint(x: 154.43, y: 98.43), controlPoint2: CGPoint(x: 152.45, y: 100.42))
        bezierPath.addCurve(to: CGPoint(x: 145.57, y: 95.99), controlPoint1: CGPoint(x: 147.55, y: 100.42), controlPoint2: CGPoint(x: 145.57, y: 98.43))
        bezierPath.addLine(to: CGPoint(x: 145.57, y: 82.71))
        bezierPath.addCurve(to: CGPoint(x: 145.57, y: 69.43), controlPoint1: CGPoint(x: 145.57, y: 69.43), controlPoint2: CGPoint(x: 145.57, y: 69.43))
        bezierPath.addCurve(to: CGPoint(x: 150, y: 65), controlPoint1: CGPoint(x: 145.57, y: 66.98), controlPoint2: CGPoint(x: 147.55, y: 65))
        bezierPath.addCurve(to: CGPoint(x: 154.43, y: 69.43), controlPoint1: CGPoint(x: 152.45, y: 65), controlPoint2: CGPoint(x: 154.43, y: 66.98))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 210.1, y: 89.9))
        bezierPath.addCurve(to: CGPoint(x: 210.1, y: 96.16), controlPoint1: CGPoint(x: 211.83, y: 91.62), controlPoint2: CGPoint(x: 211.83, y: 94.43))
        bezierPath.addLine(to: CGPoint(x: 200.71, y: 105.55))
        bezierPath.addCurve(to: CGPoint(x: 191.32, y: 114.94), controlPoint1: CGPoint(x: 191.32, y: 114.94), controlPoint2: CGPoint(x: 191.32, y: 114.94))
        bezierPath.addCurve(to: CGPoint(x: 185.06, y: 114.94), controlPoint1: CGPoint(x: 189.59, y: 116.67), controlPoint2: CGPoint(x: 186.79, y: 116.67))
        bezierPath.addCurve(to: CGPoint(x: 185.06, y: 108.68), controlPoint1: CGPoint(x: 183.33, y: 113.21), controlPoint2: CGPoint(x: 183.33, y: 110.41))
        bezierPath.addLine(to: CGPoint(x: 194.45, y: 99.29))
        bezierPath.addCurve(to: CGPoint(x: 203.84, y: 89.9), controlPoint1: CGPoint(x: 203.84, y: 89.9), controlPoint2: CGPoint(x: 203.84, y: 89.9))
        bezierPath.addCurve(to: CGPoint(x: 210.1, y: 89.9), controlPoint1: CGPoint(x: 205.57, y: 88.17), controlPoint2: CGPoint(x: 208.38, y: 88.17))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 96.16, y: 89.9))
        bezierPath.addLine(to: CGPoint(x: 105.55, y: 99.29))
        bezierPath.addCurve(to: CGPoint(x: 114.94, y: 108.68), controlPoint1: CGPoint(x: 114.94, y: 108.68), controlPoint2: CGPoint(x: 114.94, y: 108.68))
        bezierPath.addCurve(to: CGPoint(x: 114.94, y: 114.94), controlPoint1: CGPoint(x: 116.67, y: 110.41), controlPoint2: CGPoint(x: 116.67, y: 113.21))
        bezierPath.addCurve(to: CGPoint(x: 108.68, y: 114.94), controlPoint1: CGPoint(x: 113.21, y: 116.67), controlPoint2: CGPoint(x: 110.41, y: 116.67))
        bezierPath.addLine(to: CGPoint(x: 99.29, y: 105.55))
        bezierPath.addCurve(to: CGPoint(x: 89.9, y: 96.16), controlPoint1: CGPoint(x: 89.9, y: 96.16), controlPoint2: CGPoint(x: 89.9, y: 96.16))
        bezierPath.addCurve(to: CGPoint(x: 89.9, y: 89.9), controlPoint1: CGPoint(x: 88.17, y: 94.43), controlPoint2: CGPoint(x: 88.17, y: 91.62))
        bezierPath.addCurve(to: CGPoint(x: 96.16, y: 89.9), controlPoint1: CGPoint(x: 91.62, y: 88.17), controlPoint2: CGPoint(x: 94.43, y: 88.17))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 235, y: 150))
        bezierPath.addCurve(to: CGPoint(x: 230.57, y: 154.43), controlPoint1: CGPoint(x: 235, y: 152.45), controlPoint2: CGPoint(x: 233.02, y: 154.43))
        bezierPath.addLine(to: CGPoint(x: 204.01, y: 154.43))
        bezierPath.addCurve(to: CGPoint(x: 199.58, y: 150), controlPoint1: CGPoint(x: 201.57, y: 154.43), controlPoint2: CGPoint(x: 199.58, y: 152.45))
        bezierPath.addCurve(to: CGPoint(x: 204.01, y: 145.57), controlPoint1: CGPoint(x: 199.58, y: 147.55), controlPoint2: CGPoint(x: 201.57, y: 145.57))
        bezierPath.addLine(to: CGPoint(x: 230.57, y: 145.57))
        bezierPath.addCurve(to: CGPoint(x: 235, y: 150), controlPoint1: CGPoint(x: 233.02, y: 145.57), controlPoint2: CGPoint(x: 235, y: 147.55))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 100.42, y: 150))
        bezierPath.addCurve(to: CGPoint(x: 95.99, y: 154.43), controlPoint1: CGPoint(x: 100.42, y: 152.45), controlPoint2: CGPoint(x: 98.43, y: 154.43))
        bezierPath.addLine(to: CGPoint(x: 69.43, y: 154.43))
        bezierPath.addCurve(to: CGPoint(x: 65, y: 150), controlPoint1: CGPoint(x: 66.98, y: 154.43), controlPoint2: CGPoint(x: 65, y: 152.45))
        bezierPath.addCurve(to: CGPoint(x: 69.43, y: 145.57), controlPoint1: CGPoint(x: 65, y: 147.55), controlPoint2: CGPoint(x: 66.98, y: 145.57))
        bezierPath.addLine(to: CGPoint(x: 95.99, y: 145.57))
        bezierPath.addCurve(to: CGPoint(x: 100.42, y: 150), controlPoint1: CGPoint(x: 98.43, y: 145.57), controlPoint2: CGPoint(x: 100.42, y: 147.55))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 189.84, y: 150))
        bezierPath.addCurve(to: CGPoint(x: 150, y: 189.84), controlPoint1: CGPoint(x: 189.84, y: 172.01), controlPoint2: CGPoint(x: 172.01, y: 189.84))
        bezierPath.addCurve(to: CGPoint(x: 110.16, y: 150), controlPoint1: CGPoint(x: 127.99, y: 189.84), controlPoint2: CGPoint(x: 110.16, y: 172.01))
        bezierPath.addCurve(to: CGPoint(x: 139.07, y: 111.67), controlPoint1: CGPoint(x: 110.16, y: 131.79), controlPoint2: CGPoint(x: 122.38, y: 116.43))
        bezierPath.addCurve(to: CGPoint(x: 150, y: 110.16), controlPoint1: CGPoint(x: 142.54, y: 110.69), controlPoint2: CGPoint(x: 146.21, y: 110.16))
        bezierPath.addCurve(to: CGPoint(x: 189.84, y: 150), controlPoint1: CGPoint(x: 172.01, y: 110.16), controlPoint2: CGPoint(x: 189.84, y: 127.99))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 114.94, y: 185.06))
        bezierPath.addCurve(to: CGPoint(x: 114.94, y: 191.32), controlPoint1: CGPoint(x: 116.67, y: 186.79), controlPoint2: CGPoint(x: 116.67, y: 189.59))
        bezierPath.addLine(to: CGPoint(x: 105.55, y: 200.71))
        bezierPath.addCurve(to: CGPoint(x: 96.16, y: 210.1), controlPoint1: CGPoint(x: 96.16, y: 210.1), controlPoint2: CGPoint(x: 96.16, y: 210.1))
        bezierPath.addCurve(to: CGPoint(x: 89.9, y: 210.1), controlPoint1: CGPoint(x: 94.43, y: 211.83), controlPoint2: CGPoint(x: 91.62, y: 211.83))
        bezierPath.addCurve(to: CGPoint(x: 89.9, y: 203.84), controlPoint1: CGPoint(x: 88.17, y: 208.38), controlPoint2: CGPoint(x: 88.17, y: 205.57))
        bezierPath.addLine(to: CGPoint(x: 99.29, y: 194.45))
        bezierPath.addCurve(to: CGPoint(x: 108.68, y: 185.06), controlPoint1: CGPoint(x: 108.68, y: 185.06), controlPoint2: CGPoint(x: 108.68, y: 185.06))
        bezierPath.addCurve(to: CGPoint(x: 114.94, y: 185.06), controlPoint1: CGPoint(x: 110.41, y: 183.33), controlPoint2: CGPoint(x: 113.21, y: 183.33))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 191.32, y: 185.06))
        bezierPath.addLine(to: CGPoint(x: 200.71, y: 194.45))
        bezierPath.addCurve(to: CGPoint(x: 210.1, y: 203.84), controlPoint1: CGPoint(x: 210.1, y: 203.84), controlPoint2: CGPoint(x: 210.1, y: 203.84))
        bezierPath.addCurve(to: CGPoint(x: 210.1, y: 210.1), controlPoint1: CGPoint(x: 211.83, y: 205.57), controlPoint2: CGPoint(x: 211.83, y: 208.38))
        bezierPath.addCurve(to: CGPoint(x: 203.84, y: 210.1), controlPoint1: CGPoint(x: 208.38, y: 211.83), controlPoint2: CGPoint(x: 205.57, y: 211.83))
        bezierPath.addLine(to: CGPoint(x: 194.45, y: 200.71))
        bezierPath.addCurve(to: CGPoint(x: 185.06, y: 191.32), controlPoint1: CGPoint(x: 185.06, y: 191.32), controlPoint2: CGPoint(x: 185.06, y: 191.32))
        bezierPath.addCurve(to: CGPoint(x: 185.06, y: 185.06), controlPoint1: CGPoint(x: 183.33, y: 189.59), controlPoint2: CGPoint(x: 183.33, y: 186.79))
        bezierPath.addCurve(to: CGPoint(x: 191.32, y: 185.06), controlPoint1: CGPoint(x: 186.79, y: 183.33), controlPoint2: CGPoint(x: 189.59, y: 183.33))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 154.43, y: 204.01))
        bezierPath.addLine(to: CGPoint(x: 154.43, y: 217.29))
        bezierPath.addCurve(to: CGPoint(x: 154.43, y: 230.57), controlPoint1: CGPoint(x: 154.43, y: 230.57), controlPoint2: CGPoint(x: 154.43, y: 230.57))
        bezierPath.addCurve(to: CGPoint(x: 150, y: 235), controlPoint1: CGPoint(x: 154.43, y: 233.02), controlPoint2: CGPoint(x: 152.45, y: 235))
        bezierPath.addCurve(to: CGPoint(x: 145.57, y: 230.57), controlPoint1: CGPoint(x: 147.55, y: 235), controlPoint2: CGPoint(x: 145.57, y: 233.02))
        bezierPath.addLine(to: CGPoint(x: 145.57, y: 217.29))
        bezierPath.addCurve(to: CGPoint(x: 145.57, y: 204.01), controlPoint1: CGPoint(x: 145.57, y: 204.01), controlPoint2: CGPoint(x: 145.57, y: 204.01))
        bezierPath.addCurve(to: CGPoint(x: 150, y: 199.58), controlPoint1: CGPoint(x: 145.57, y: 201.57), controlPoint2: CGPoint(x: 147.55, y: 199.58))
        bezierPath.addCurve(to: CGPoint(x: 154.43, y: 204.01), controlPoint1: CGPoint(x: 152.45, y: 199.58), controlPoint2: CGPoint(x: 154.43, y: 201.57))
        bezierPath.close()
        iconColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawCloseIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: 149.38, y: 150)
        context.rotate(by: -45 * CGFloat.pi/180)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 11.78, y: -84.54))
        bezierPath.addLine(to: CGPoint(x: 12.05, y: -84.47))
        bezierPath.addCurve(to: CGPoint(x: 16, y: -80.53), controlPoint1: CGPoint(x: 13.89, y: -83.8), controlPoint2: CGPoint(x: 15.33, y: -82.36))
        bezierPath.addCurve(to: CGPoint(x: 16.53, y: -74.17), controlPoint1: CGPoint(x: 16.53, y: -78.85), controlPoint2: CGPoint(x: 16.53, y: -77.29))
        bezierPath.addCurve(to: CGPoint(x: 16.53, y: -16.53), controlPoint1: CGPoint(x: 16.53, y: -74.17), controlPoint2: CGPoint(x: 16.53, y: -47.36))
        bezierPath.addLine(to: CGPoint(x: 74.17, y: -16.53))
        bezierPath.addCurve(to: CGPoint(x: 80.25, y: -16.06), controlPoint1: CGPoint(x: 77.29, y: -16.53), controlPoint2: CGPoint(x: 78.85, y: -16.53))
        bezierPath.addLine(to: CGPoint(x: 80.53, y: -16))
        bezierPath.addCurve(to: CGPoint(x: 84.47, y: -12.05), controlPoint1: CGPoint(x: 82.36, y: -15.33), controlPoint2: CGPoint(x: 83.8, y: -13.89))
        bezierPath.addCurve(to: CGPoint(x: 85, y: -5.7), controlPoint1: CGPoint(x: 85, y: -10.38), controlPoint2: CGPoint(x: 85, y: -8.82))
        bezierPath.addLine(to: CGPoint(x: 85, y: 4.52))
        bezierPath.addCurve(to: CGPoint(x: 84.54, y: 10.6), controlPoint1: CGPoint(x: 85, y: 7.64), controlPoint2: CGPoint(x: 85, y: 9.2))
        bezierPath.addLine(to: CGPoint(x: 84.47, y: 10.87))
        bezierPath.addCurve(to: CGPoint(x: 80.53, y: 14.82), controlPoint1: CGPoint(x: 83.8, y: 12.71), controlPoint2: CGPoint(x: 82.36, y: 14.15))
        bezierPath.addCurve(to: CGPoint(x: 74.17, y: 15.35), controlPoint1: CGPoint(x: 78.85, y: 15.35), controlPoint2: CGPoint(x: 77.29, y: 15.35))
        bezierPath.addLine(to: CGPoint(x: 16.53, y: 15.35))
        bezierPath.addCurve(to: CGPoint(x: 16.53, y: 74.17), controlPoint1: CGPoint(x: 16.53, y: 46.67), controlPoint2: CGPoint(x: 16.53, y: 74.17))
        bezierPath.addCurve(to: CGPoint(x: 16.06, y: 80.25), controlPoint1: CGPoint(x: 16.53, y: 77.29), controlPoint2: CGPoint(x: 16.53, y: 78.85))
        bezierPath.addLine(to: CGPoint(x: 16, y: 80.53))
        bezierPath.addCurve(to: CGPoint(x: 12.05, y: 84.47), controlPoint1: CGPoint(x: 15.33, y: 82.36), controlPoint2: CGPoint(x: 13.89, y: 83.8))
        bezierPath.addCurve(to: CGPoint(x: 5.7, y: 85), controlPoint1: CGPoint(x: 10.38, y: 85), controlPoint2: CGPoint(x: 8.82, y: 85))
        bezierPath.addLine(to: CGPoint(x: -4.52, y: 85))
        bezierPath.addCurve(to: CGPoint(x: -10.6, y: 84.54), controlPoint1: CGPoint(x: -7.64, y: 85), controlPoint2: CGPoint(x: -9.2, y: 85))
        bezierPath.addLine(to: CGPoint(x: -10.87, y: 84.47))
        bezierPath.addCurve(to: CGPoint(x: -14.82, y: 80.53), controlPoint1: CGPoint(x: -12.71, y: 83.8), controlPoint2: CGPoint(x: -14.15, y: 82.36))
        bezierPath.addCurve(to: CGPoint(x: -15.35, y: 74.17), controlPoint1: CGPoint(x: -15.35, y: 78.85), controlPoint2: CGPoint(x: -15.35, y: 77.29))
        bezierPath.addCurve(to: CGPoint(x: -15.35, y: 15.35), controlPoint1: CGPoint(x: -15.35, y: 74.17), controlPoint2: CGPoint(x: -15.35, y: 46.67))
        bezierPath.addLine(to: CGPoint(x: -74.17, y: 15.35))
        bezierPath.addCurve(to: CGPoint(x: -80.25, y: 14.88), controlPoint1: CGPoint(x: -77.29, y: 15.35), controlPoint2: CGPoint(x: -78.85, y: 15.35))
        bezierPath.addLine(to: CGPoint(x: -80.53, y: 14.82))
        bezierPath.addCurve(to: CGPoint(x: -84.47, y: 10.87), controlPoint1: CGPoint(x: -82.36, y: 14.15), controlPoint2: CGPoint(x: -83.8, y: 12.71))
        bezierPath.addCurve(to: CGPoint(x: -85, y: 4.52), controlPoint1: CGPoint(x: -85, y: 9.2), controlPoint2: CGPoint(x: -85, y: 7.64))
        bezierPath.addLine(to: CGPoint(x: -85, y: -5.7))
        bezierPath.addCurve(to: CGPoint(x: -84.54, y: -11.78), controlPoint1: CGPoint(x: -85, y: -8.82), controlPoint2: CGPoint(x: -85, y: -10.38))
        bezierPath.addLine(to: CGPoint(x: -84.47, y: -12.05))
        bezierPath.addCurve(to: CGPoint(x: -80.53, y: -16), controlPoint1: CGPoint(x: -83.8, y: -13.89), controlPoint2: CGPoint(x: -82.36, y: -15.33))
        bezierPath.addCurve(to: CGPoint(x: -74.17, y: -16.53), controlPoint1: CGPoint(x: -78.85, y: -16.53), controlPoint2: CGPoint(x: -77.29, y: -16.53))
        bezierPath.addLine(to: CGPoint(x: -15.35, y: -16.53))
        bezierPath.addCurve(to: CGPoint(x: -15.35, y: -74.17), controlPoint1: CGPoint(x: -15.35, y: -47.36), controlPoint2: CGPoint(x: -15.35, y: -74.17))
        bezierPath.addCurve(to: CGPoint(x: -14.88, y: -80.25), controlPoint1: CGPoint(x: -15.35, y: -77.29), controlPoint2: CGPoint(x: -15.35, y: -78.85))
        bezierPath.addLine(to: CGPoint(x: -14.82, y: -80.53))
        bezierPath.addCurve(to: CGPoint(x: -10.87, y: -84.47), controlPoint1: CGPoint(x: -14.15, y: -82.36), controlPoint2: CGPoint(x: -12.71, y: -83.8))
        bezierPath.addCurve(to: CGPoint(x: -4.52, y: -85), controlPoint1: CGPoint(x: -9.2, y: -85), controlPoint2: CGPoint(x: -7.64, y: -85))
        bezierPath.addLine(to: CGPoint(x: 5.7, y: -85))
        bezierPath.addCurve(to: CGPoint(x: 11.78, y: -84.54), controlPoint1: CGPoint(x: 8.82, y: -85), controlPoint2: CGPoint(x: 10.38, y: -85))
        bezierPath.close()
        iconColor.setFill()
        bezierPath.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawSortIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 173.16, y: 170.75))
        bezier3Path.addLine(to: CGPoint(x: 173.16, y: 68.18))
        bezier3Path.addCurve(to: CGPoint(x: 176.33, y: 65), controlPoint1: CGPoint(x: 173.16, y: 66.43), controlPoint2: CGPoint(x: 174.58, y: 65))
        bezier3Path.addLine(to: CGPoint(x: 195.66, y: 65))
        bezier3Path.addCurve(to: CGPoint(x: 198.84, y: 68.18), controlPoint1: CGPoint(x: 197.42, y: 65), controlPoint2: CGPoint(x: 198.84, y: 66.42))
        bezier3Path.addLine(to: CGPoint(x: 198.84, y: 170.75))
        bezier3Path.addCurve(to: CGPoint(x: 218.49, y: 170.72), controlPoint1: CGPoint(x: 206.71, y: 170.73), controlPoint2: CGPoint(x: 215.68, y: 170.72))
        bezier3Path.addCurve(to: CGPoint(x: 218.49, y: 179.81), controlPoint1: CGPoint(x: 222.56, y: 170.72), controlPoint2: CGPoint(x: 223.74, y: 174.64))
        bezier3Path.addCurve(to: CGPoint(x: 189.03, y: 214.45), controlPoint1: CGPoint(x: 213.23, y: 184.98), controlPoint2: CGPoint(x: 189.03, y: 214.45))
        bezier3Path.addCurve(to: CGPoint(x: 181.67, y: 214.45), controlPoint1: CGPoint(x: 187, y: 216.48), controlPoint2: CGPoint(x: 183.7, y: 216.48))
        bezier3Path.addCurve(to: CGPoint(x: 152.21, y: 179.81), controlPoint1: CGPoint(x: 181.67, y: 214.45), controlPoint2: CGPoint(x: 156.53, y: 184.23))
        bezier3Path.addCurve(to: CGPoint(x: 152.21, y: 170.72), controlPoint1: CGPoint(x: 147.89, y: 175.4), controlPoint2: CGPoint(x: 147.62, y: 170.77))
        bezier3Path.addLine(to: CGPoint(x: 173.16, y: 170.75))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 100.29, y: 129.25))
        bezier3Path.addLine(to: CGPoint(x: 100.29, y: 231.82))
        bezier3Path.addCurve(to: CGPoint(x: 103.46, y: 235), controlPoint1: CGPoint(x: 100.29, y: 233.57), controlPoint2: CGPoint(x: 101.71, y: 235))
        bezier3Path.addLine(to: CGPoint(x: 122.8, y: 235))
        bezier3Path.addCurve(to: CGPoint(x: 125.97, y: 231.82), controlPoint1: CGPoint(x: 124.55, y: 235), controlPoint2: CGPoint(x: 125.97, y: 233.58))
        bezier3Path.addLine(to: CGPoint(x: 125.97, y: 129.25))
        bezier3Path.addCurve(to: CGPoint(x: 145.62, y: 129.28), controlPoint1: CGPoint(x: 133.84, y: 129.27), controlPoint2: CGPoint(x: 142.81, y: 129.28))
        bezier3Path.addCurve(to: CGPoint(x: 145.62, y: 120.19), controlPoint1: CGPoint(x: 149.69, y: 129.28), controlPoint2: CGPoint(x: 150.88, y: 125.36))
        bezier3Path.addCurve(to: CGPoint(x: 116.16, y: 85.55), controlPoint1: CGPoint(x: 140.36, y: 115.02), controlPoint2: CGPoint(x: 116.16, y: 85.55))
        bezier3Path.addCurve(to: CGPoint(x: 108.8, y: 85.55), controlPoint1: CGPoint(x: 114.14, y: 83.52), controlPoint2: CGPoint(x: 110.83, y: 83.52))
        bezier3Path.addCurve(to: CGPoint(x: 79.34, y: 120.19), controlPoint1: CGPoint(x: 108.8, y: 85.55), controlPoint2: CGPoint(x: 83.66, y: 115.77))
        bezier3Path.addCurve(to: CGPoint(x: 79.34, y: 129.28), controlPoint1: CGPoint(x: 75.02, y: 124.6), controlPoint2: CGPoint(x: 74.75, y: 129.23))
        bezier3Path.addLine(to: CGPoint(x: 100.29, y: 129.25))
        bezier3Path.close()
        iconColor.setFill()
        bezier3Path.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawMoreIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 85.52, y: 171))
        bezierPath.addCurve(to: CGPoint(x: 65, y: 150.5), controlPoint1: CGPoint(x: 74.19, y: 171), controlPoint2: CGPoint(x: 65, y: 161.82))
        bezierPath.addCurve(to: CGPoint(x: 85.52, y: 130), controlPoint1: CGPoint(x: 65, y: 139.18), controlPoint2: CGPoint(x: 74.19, y: 130))
        bezierPath.addCurve(to: CGPoint(x: 106.03, y: 150.5), controlPoint1: CGPoint(x: 96.85, y: 130), controlPoint2: CGPoint(x: 106.03, y: 139.18))
        bezierPath.addCurve(to: CGPoint(x: 85.52, y: 171), controlPoint1: CGPoint(x: 106.03, y: 161.82), controlPoint2: CGPoint(x: 96.85, y: 171))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 150, y: 171))
        bezierPath.addCurve(to: CGPoint(x: 129.48, y: 150.5), controlPoint1: CGPoint(x: 138.67, y: 171), controlPoint2: CGPoint(x: 129.48, y: 161.82))
        bezierPath.addCurve(to: CGPoint(x: 150, y: 130), controlPoint1: CGPoint(x: 129.48, y: 139.18), controlPoint2: CGPoint(x: 138.67, y: 130))
        bezierPath.addCurve(to: CGPoint(x: 170.52, y: 150.5), controlPoint1: CGPoint(x: 161.33, y: 130), controlPoint2: CGPoint(x: 170.52, y: 139.18))
        bezierPath.addCurve(to: CGPoint(x: 150, y: 171), controlPoint1: CGPoint(x: 170.52, y: 161.82), controlPoint2: CGPoint(x: 161.33, y: 171))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 214.48, y: 171))
        bezierPath.addCurve(to: CGPoint(x: 193.97, y: 150.5), controlPoint1: CGPoint(x: 203.15, y: 171), controlPoint2: CGPoint(x: 193.97, y: 161.82))
        bezierPath.addCurve(to: CGPoint(x: 214.48, y: 130), controlPoint1: CGPoint(x: 193.97, y: 139.18), controlPoint2: CGPoint(x: 203.15, y: 130))
        bezierPath.addCurve(to: CGPoint(x: 235, y: 150.5), controlPoint1: CGPoint(x: 225.81, y: 130), controlPoint2: CGPoint(x: 235, y: 139.18))
        bezierPath.addCurve(to: CGPoint(x: 214.48, y: 171), controlPoint1: CGPoint(x: 235, y: 161.82), controlPoint2: CGPoint(x: 225.81, y: 171))
        bezierPath.close()
        bezierPath.usesEvenOddFillRule = true
        iconColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawReleasesIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 154.99, y: 96.71))
        bezier3Path.addCurve(to: CGPoint(x: 133.41, y: 103.98), controlPoint1: CGPoint(x: 143.07, y: 100.34), controlPoint2: CGPoint(x: 141.65, y: 100.96))
        bezier3Path.addCurve(to: CGPoint(x: 125.63, y: 108.3), controlPoint1: CGPoint(x: 131.52, y: 104.67), controlPoint2: CGPoint(x: 126.81, y: 106.05))
        bezier3Path.addCurve(to: CGPoint(x: 128.23, y: 118.35), controlPoint1: CGPoint(x: 124.29, y: 110.85), controlPoint2: CGPoint(x: 125.07, y: 113.32))
        bezier3Path.addCurve(to: CGPoint(x: 155.73, y: 168.22), controlPoint1: CGPoint(x: 140.93, y: 138.58), controlPoint2: CGPoint(x: 150.07, y: 155.94))
        bezier3Path.addCurve(to: CGPoint(x: 127.21, y: 179.13), controlPoint1: CGPoint(x: 156.68, y: 170.3), controlPoint2: CGPoint(x: 134.38, y: 166.4))
        bezier3Path.addCurve(to: CGPoint(x: 125.02, y: 188.56), controlPoint1: CGPoint(x: 125.82, y: 181.6), controlPoint2: CGPoint(x: 124.99, y: 184.69))
        bezier3Path.addCurve(to: CGPoint(x: 125.48, y: 192.59), controlPoint1: CGPoint(x: 125.02, y: 189.54), controlPoint2: CGPoint(x: 125.22, y: 191.39))
        bezier3Path.addCurve(to: CGPoint(x: 145.27, y: 204), controlPoint1: CGPoint(x: 127.24, y: 200.47), controlPoint2: CGPoint(x: 136.62, y: 204))
        bezier3Path.addCurve(to: CGPoint(x: 168.63, y: 183.01), controlPoint1: CGPoint(x: 163.05, y: 204), controlPoint2: CGPoint(x: 168.63, y: 195))
        bezier3Path.addCurve(to: CGPoint(x: 161.7, y: 161.05), controlPoint1: CGPoint(x: 168.63, y: 176.34), controlPoint2: CGPoint(x: 165.25, y: 168.18))
        bezier3Path.addCurve(to: CGPoint(x: 143.26, y: 126.12), controlPoint1: CGPoint(x: 154.12, y: 145.8), controlPoint2: CGPoint(x: 144.59, y: 128.52))
        bezier3Path.addCurve(to: CGPoint(x: 164.34, y: 119.18), controlPoint1: CGPoint(x: 141.77, y: 123.44), controlPoint2: CGPoint(x: 154.79, y: 121.46))
        bezier3Path.addCurve(to: CGPoint(x: 171.28, y: 108.3), controlPoint1: CGPoint(x: 175.55, y: 116.5), controlPoint2: CGPoint(x: 175.74, y: 114.12))
        bezier3Path.addCurve(to: CGPoint(x: 161.72, y: 97.86), controlPoint1: CGPoint(x: 167.64, y: 103.56), controlPoint2: CGPoint(x: 164.39, y: 100.52))
        bezier3Path.addCurve(to: CGPoint(x: 154.99, y: 96.71), controlPoint1: CGPoint(x: 159.41, y: 95.56), controlPoint2: CGPoint(x: 158.43, y: 95.67))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 226.43, y: 65.84))
        bezier3Path.addLine(to: CGPoint(x: 226.92, y: 65.96))
        bezier3Path.addCurve(to: CGPoint(x: 234.04, y: 73.08), controlPoint1: CGPoint(x: 230.23, y: 67.16), controlPoint2: CGPoint(x: 232.84, y: 69.77))
        bezier3Path.addCurve(to: CGPoint(x: 235, y: 84.56), controlPoint1: CGPoint(x: 235, y: 76.11), controlPoint2: CGPoint(x: 235, y: 78.93))
        bezier3Path.addLine(to: CGPoint(x: 235, y: 215.44))
        bezier3Path.addCurve(to: CGPoint(x: 234.16, y: 226.43), controlPoint1: CGPoint(x: 235, y: 221.07), controlPoint2: CGPoint(x: 235, y: 223.89))
        bezier3Path.addLine(to: CGPoint(x: 234.04, y: 226.92))
        bezier3Path.addCurve(to: CGPoint(x: 226.92, y: 234.04), controlPoint1: CGPoint(x: 232.84, y: 230.23), controlPoint2: CGPoint(x: 230.23, y: 232.84))
        bezier3Path.addCurve(to: CGPoint(x: 215.44, y: 235), controlPoint1: CGPoint(x: 223.89, y: 235), controlPoint2: CGPoint(x: 221.07, y: 235))
        bezier3Path.addLine(to: CGPoint(x: 84.56, y: 235))
        bezier3Path.addCurve(to: CGPoint(x: 73.57, y: 234.16), controlPoint1: CGPoint(x: 78.93, y: 235), controlPoint2: CGPoint(x: 76.11, y: 235))
        bezier3Path.addLine(to: CGPoint(x: 73.08, y: 234.04))
        bezier3Path.addCurve(to: CGPoint(x: 65.96, y: 226.92), controlPoint1: CGPoint(x: 69.77, y: 232.84), controlPoint2: CGPoint(x: 67.16, y: 230.23))
        bezier3Path.addCurve(to: CGPoint(x: 65, y: 215.44), controlPoint1: CGPoint(x: 65, y: 223.89), controlPoint2: CGPoint(x: 65, y: 221.07))
        bezier3Path.addLine(to: CGPoint(x: 65, y: 84.56))
        bezier3Path.addCurve(to: CGPoint(x: 65.84, y: 73.57), controlPoint1: CGPoint(x: 65, y: 78.93), controlPoint2: CGPoint(x: 65, y: 76.11))
        bezier3Path.addLine(to: CGPoint(x: 65.96, y: 73.08))
        bezier3Path.addCurve(to: CGPoint(x: 73.08, y: 65.96), controlPoint1: CGPoint(x: 67.16, y: 69.77), controlPoint2: CGPoint(x: 69.77, y: 67.16))
        bezier3Path.addCurve(to: CGPoint(x: 84.56, y: 65), controlPoint1: CGPoint(x: 76.11, y: 65), controlPoint2: CGPoint(x: 78.93, y: 65))
        bezier3Path.addLine(to: CGPoint(x: 215.44, y: 65))
        bezier3Path.addCurve(to: CGPoint(x: 226.43, y: 65.84), controlPoint1: CGPoint(x: 221.07, y: 65), controlPoint2: CGPoint(x: 223.89, y: 65))
        bezier3Path.close()
        iconColor.setFill()
        bezier3Path.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawShareIcon(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, iconColor: UIColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1.000)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 154.24, y: 53.76))
        bezier3Path.addCurve(to: CGPoint(x: 156.84, y: 56.31), controlPoint1: CGPoint(x: 155.04, y: 54.47), controlPoint2: CGPoint(x: 155.86, y: 55.28))
        bezier3Path.addCurve(to: CGPoint(x: 161.14, y: 60.9), controlPoint1: CGPoint(x: 157.22, y: 56.71), controlPoint2: CGPoint(x: 160.61, y: 60.36))
        bezier3Path.addCurve(to: CGPoint(x: 173.02, y: 73.01), controlPoint1: CGPoint(x: 164.37, y: 64.18), controlPoint2: CGPoint(x: 168.39, y: 68.28))
        bezier3Path.addCurve(to: CGPoint(x: 173.12, y: 73.11), controlPoint1: CGPoint(x: 173.07, y: 73.06), controlPoint2: CGPoint(x: 173.07, y: 73.06))
        bezier3Path.addCurve(to: CGPoint(x: 187.1, y: 87.4), controlPoint1: CGPoint(x: 177.57, y: 77.66), controlPoint2: CGPoint(x: 182.34, y: 82.53))
        bezier3Path.addCurve(to: CGPoint(x: 191.7, y: 92.11), controlPoint1: CGPoint(x: 188.76, y: 89.1), controlPoint2: CGPoint(x: 190.31, y: 90.69))
        bezier3Path.addCurve(to: CGPoint(x: 192.99, y: 93.43), controlPoint1: CGPoint(x: 192.47, y: 92.9), controlPoint2: CGPoint(x: 192.47, y: 92.9))
        bezier3Path.addCurve(to: CGPoint(x: 193.44, y: 93.89), controlPoint1: CGPoint(x: 193.36, y: 93.81), controlPoint2: CGPoint(x: 193.36, y: 93.81))
        bezier3Path.addCurve(to: CGPoint(x: 195.34, y: 96.05), controlPoint1: CGPoint(x: 194.61, y: 95.06), controlPoint2: CGPoint(x: 194.92, y: 95.4))
        bezier3Path.addCurve(to: CGPoint(x: 195.55, y: 96.39), controlPoint1: CGPoint(x: 195.42, y: 96.16), controlPoint2: CGPoint(x: 195.48, y: 96.27))
        bezier3Path.addLine(to: CGPoint(x: 195.59, y: 96.47))
        bezier3Path.addCurve(to: CGPoint(x: 195.66, y: 96.6), controlPoint1: CGPoint(x: 195.54, y: 96.39), controlPoint2: CGPoint(x: 195.66, y: 96.6))
        bezier3Path.addLine(to: CGPoint(x: 195.6, y: 96.49))
        bezier3Path.addCurve(to: CGPoint(x: 195.67, y: 96.59), controlPoint1: CGPoint(x: 195.61, y: 96.49), controlPoint2: CGPoint(x: 195.64, y: 96.55))
        bezier3Path.addCurve(to: CGPoint(x: 195.76, y: 96.78), controlPoint1: CGPoint(x: 195.69, y: 96.63), controlPoint2: CGPoint(x: 195.76, y: 96.78))
        bezier3Path.addCurve(to: CGPoint(x: 195.76, y: 101.68), controlPoint1: CGPoint(x: 196.48, y: 98.33), controlPoint2: CGPoint(x: 196.48, y: 100.13))
        bezier3Path.addLine(to: CGPoint(x: 195.7, y: 101.79))
        bezier3Path.addCurve(to: CGPoint(x: 193.42, y: 104.59), controlPoint1: CGPoint(x: 195.21, y: 102.75), controlPoint2: CGPoint(x: 194.82, y: 103.19))
        bezier3Path.addLine(to: CGPoint(x: 190.71, y: 107.3))
        bezier3Path.addCurve(to: CGPoint(x: 188.19, y: 109.43), controlPoint1: CGPoint(x: 189.39, y: 108.62), controlPoint2: CGPoint(x: 188.95, y: 109.03))
        bezier3Path.addLine(to: CGPoint(x: 188.09, y: 109.48))
        bezier3Path.addCurve(to: CGPoint(x: 187.98, y: 109.54), controlPoint1: CGPoint(x: 188.18, y: 109.43), controlPoint2: CGPoint(x: 187.98, y: 109.54))
        bezier3Path.addLine(to: CGPoint(x: 188.08, y: 109.49))
        bezier3Path.addCurve(to: CGPoint(x: 187.98, y: 109.55), controlPoint1: CGPoint(x: 188.08, y: 109.49), controlPoint2: CGPoint(x: 188.02, y: 109.52))
        bezier3Path.addCurve(to: CGPoint(x: 187.8, y: 109.64), controlPoint1: CGPoint(x: 187.94, y: 109.57), controlPoint2: CGPoint(x: 187.8, y: 109.64))
        bezier3Path.addCurve(to: CGPoint(x: 182.9, y: 109.64), controlPoint1: CGPoint(x: 186.24, y: 110.37), controlPoint2: CGPoint(x: 184.45, y: 110.37))
        bezier3Path.addLine(to: CGPoint(x: 182.78, y: 109.59))
        bezier3Path.addCurve(to: CGPoint(x: 181.83, y: 108.99), controlPoint1: CGPoint(x: 182.45, y: 109.41), controlPoint2: CGPoint(x: 182.14, y: 109.22))
        bezier3Path.addCurve(to: CGPoint(x: 179.98, y: 107.3), controlPoint1: CGPoint(x: 181.3, y: 108.6), controlPoint2: CGPoint(x: 180.98, y: 108.3))
        bezier3Path.addCurve(to: CGPoint(x: 175.35, y: 102.67), controlPoint1: CGPoint(x: 179.06, y: 106.38), controlPoint2: CGPoint(x: 179.06, y: 106.38))
        bezier3Path.addCurve(to: CGPoint(x: 165.16, y: 92.48), controlPoint1: CGPoint(x: 170.72, y: 98.04), controlPoint2: CGPoint(x: 170.72, y: 98.04))
        bezier3Path.addCurve(to: CGPoint(x: 158, y: 85.32), controlPoint1: CGPoint(x: 161.38, y: 88.7), controlPoint2: CGPoint(x: 159.61, y: 86.93))
        bezier3Path.addCurve(to: CGPoint(x: 158, y: 110.78), controlPoint1: CGPoint(x: 158, y: 93.79), controlPoint2: CGPoint(x: 158, y: 97.99))
        bezier3Path.addCurve(to: CGPoint(x: 158, y: 123.84), controlPoint1: CGPoint(x: 158, y: 114.36), controlPoint2: CGPoint(x: 158, y: 118.62))
        bezier3Path.addCurve(to: CGPoint(x: 158, y: 157.92), controlPoint1: CGPoint(x: 158, y: 142.43), controlPoint2: CGPoint(x: 158, y: 142.43))
        bezier3Path.addCurve(to: CGPoint(x: 158, y: 169.15), controlPoint1: CGPoint(x: 158, y: 164.51), controlPoint2: CGPoint(x: 158, y: 164.51))
        bezier3Path.addCurve(to: CGPoint(x: 158, y: 173.41), controlPoint1: CGPoint(x: 158, y: 172.64), controlPoint2: CGPoint(x: 158, y: 172.64))
        bezier3Path.addCurve(to: CGPoint(x: 157.72, y: 176.71), controlPoint1: CGPoint(x: 158, y: 175.28), controlPoint2: CGPoint(x: 157.97, y: 175.88))
        bezier3Path.addLine(to: CGPoint(x: 157.69, y: 176.81))
        bezier3Path.addCurve(to: CGPoint(x: 157.65, y: 176.93), controlPoint1: CGPoint(x: 157.72, y: 176.7), controlPoint2: CGPoint(x: 157.65, y: 176.93))
        bezier3Path.addLine(to: CGPoint(x: 157.69, y: 176.82))
        bezier3Path.addCurve(to: CGPoint(x: 157.66, y: 176.93), controlPoint1: CGPoint(x: 157.69, y: 176.82), controlPoint2: CGPoint(x: 157.67, y: 176.89))
        bezier3Path.addCurve(to: CGPoint(x: 157.59, y: 177.13), controlPoint1: CGPoint(x: 157.65, y: 176.98), controlPoint2: CGPoint(x: 157.59, y: 177.13))
        bezier3Path.addCurve(to: CGPoint(x: 154.13, y: 180.59), controlPoint1: CGPoint(x: 157.01, y: 178.74), controlPoint2: CGPoint(x: 155.74, y: 180.01))
        bezier3Path.addLine(to: CGPoint(x: 154.01, y: 180.64))
        bezier3Path.addCurve(to: CGPoint(x: 153.75, y: 180.71), controlPoint1: CGPoint(x: 153.92, y: 180.66), controlPoint2: CGPoint(x: 153.84, y: 180.69))
        bezier3Path.addCurve(to: CGPoint(x: 150.41, y: 181), controlPoint1: CGPoint(x: 152.81, y: 180.97), controlPoint2: CGPoint(x: 152.27, y: 181))
        bezier3Path.addLine(to: CGPoint(x: 145.59, y: 181))
        bezier3Path.addCurve(to: CGPoint(x: 142.29, y: 180.72), controlPoint1: CGPoint(x: 143.72, y: 181), controlPoint2: CGPoint(x: 143.12, y: 180.97))
        bezier3Path.addLine(to: CGPoint(x: 142.19, y: 180.69))
        bezier3Path.addCurve(to: CGPoint(x: 142.07, y: 180.65), controlPoint1: CGPoint(x: 142.3, y: 180.72), controlPoint2: CGPoint(x: 142.07, y: 180.65))
        bezier3Path.addLine(to: CGPoint(x: 142.18, y: 180.69))
        bezier3Path.addCurve(to: CGPoint(x: 142.07, y: 180.66), controlPoint1: CGPoint(x: 142.18, y: 180.69), controlPoint2: CGPoint(x: 142.11, y: 180.67))
        bezier3Path.addCurve(to: CGPoint(x: 141.87, y: 180.59), controlPoint1: CGPoint(x: 142.02, y: 180.65), controlPoint2: CGPoint(x: 141.87, y: 180.59))
        bezier3Path.addCurve(to: CGPoint(x: 138.41, y: 177.13), controlPoint1: CGPoint(x: 140.26, y: 180.01), controlPoint2: CGPoint(x: 138.99, y: 178.74))
        bezier3Path.addLine(to: CGPoint(x: 138.36, y: 177.01))
        bezier3Path.addCurve(to: CGPoint(x: 138.29, y: 176.75), controlPoint1: CGPoint(x: 138.34, y: 176.92), controlPoint2: CGPoint(x: 138.31, y: 176.84))
        bezier3Path.addCurve(to: CGPoint(x: 138, y: 173.41), controlPoint1: CGPoint(x: 138.03, y: 175.81), controlPoint2: CGPoint(x: 138, y: 175.27))
        bezier3Path.addCurve(to: CGPoint(x: 138, y: 169.15), controlPoint1: CGPoint(x: 138, y: 172.64), controlPoint2: CGPoint(x: 138, y: 172.64))
        bezier3Path.addCurve(to: CGPoint(x: 138, y: 157.9), controlPoint1: CGPoint(x: 138, y: 164.49), controlPoint2: CGPoint(x: 138, y: 164.49))
        bezier3Path.addCurve(to: CGPoint(x: 138, y: 123.75), controlPoint1: CGPoint(x: 138, y: 142.38), controlPoint2: CGPoint(x: 138, y: 142.38))
        bezier3Path.addCurve(to: CGPoint(x: 138, y: 96.75), controlPoint1: CGPoint(x: 138, y: 109.66), controlPoint2: CGPoint(x: 138, y: 102.46))
        bezier3Path.addCurve(to: CGPoint(x: 138, y: 84.86), controlPoint1: CGPoint(x: 138, y: 92.68), controlPoint2: CGPoint(x: 138, y: 89.37))
        bezier3Path.addCurve(to: CGPoint(x: 131.19, y: 91.66), controlPoint1: CGPoint(x: 136.43, y: 86.43), controlPoint2: CGPoint(x: 134.76, y: 88.09))
        bezier3Path.addLine(to: CGPoint(x: 131.01, y: 91.85))
        bezier3Path.addCurve(to: CGPoint(x: 120.44, y: 102.41), controlPoint1: CGPoint(x: 125.33, y: 97.53), controlPoint2: CGPoint(x: 125.28, y: 97.58))
        bezier3Path.addCurve(to: CGPoint(x: 115.56, y: 107.3), controlPoint1: CGPoint(x: 116.53, y: 106.32), controlPoint2: CGPoint(x: 116.53, y: 106.32))
        bezier3Path.addCurve(to: CGPoint(x: 113.03, y: 109.43), controlPoint1: CGPoint(x: 114.24, y: 108.62), controlPoint2: CGPoint(x: 113.79, y: 109.03))
        bezier3Path.addLine(to: CGPoint(x: 112.94, y: 109.48))
        bezier3Path.addCurve(to: CGPoint(x: 112.82, y: 109.54), controlPoint1: CGPoint(x: 113.03, y: 109.43), controlPoint2: CGPoint(x: 112.82, y: 109.54))
        bezier3Path.addLine(to: CGPoint(x: 112.93, y: 109.49))
        bezier3Path.addCurve(to: CGPoint(x: 112.83, y: 109.55), controlPoint1: CGPoint(x: 112.93, y: 109.49), controlPoint2: CGPoint(x: 112.87, y: 109.52))
        bezier3Path.addCurve(to: CGPoint(x: 112.64, y: 109.64), controlPoint1: CGPoint(x: 112.79, y: 109.57), controlPoint2: CGPoint(x: 112.64, y: 109.64))
        bezier3Path.addCurve(to: CGPoint(x: 107.74, y: 109.64), controlPoint1: CGPoint(x: 111.09, y: 110.37), controlPoint2: CGPoint(x: 109.3, y: 110.37))
        bezier3Path.addLine(to: CGPoint(x: 107.63, y: 109.59))
        bezier3Path.addCurve(to: CGPoint(x: 106.68, y: 108.99), controlPoint1: CGPoint(x: 107.3, y: 109.41), controlPoint2: CGPoint(x: 106.98, y: 109.22))
        bezier3Path.addCurve(to: CGPoint(x: 104.83, y: 107.3), controlPoint1: CGPoint(x: 106.14, y: 108.6), controlPoint2: CGPoint(x: 105.82, y: 108.3))
        bezier3Path.addLine(to: CGPoint(x: 102.12, y: 104.59))
        bezier3Path.addCurve(to: CGPoint(x: 99.99, y: 102.07), controlPoint1: CGPoint(x: 100.8, y: 103.28), controlPoint2: CGPoint(x: 100.4, y: 102.83))
        bezier3Path.addLine(to: CGPoint(x: 99.94, y: 101.98))
        bezier3Path.addCurve(to: CGPoint(x: 99.88, y: 101.86), controlPoint1: CGPoint(x: 99.99, y: 102.07), controlPoint2: CGPoint(x: 99.88, y: 101.86))
        bezier3Path.addLine(to: CGPoint(x: 99.93, y: 101.97))
        bezier3Path.addCurve(to: CGPoint(x: 99.87, y: 101.87), controlPoint1: CGPoint(x: 99.93, y: 101.97), controlPoint2: CGPoint(x: 99.9, y: 101.91))
        bezier3Path.addCurve(to: CGPoint(x: 99.78, y: 101.68), controlPoint1: CGPoint(x: 99.85, y: 101.83), controlPoint2: CGPoint(x: 99.78, y: 101.68))
        bezier3Path.addCurve(to: CGPoint(x: 99.78, y: 96.78), controlPoint1: CGPoint(x: 99.06, y: 100.13), controlPoint2: CGPoint(x: 99.06, y: 98.33))
        bezier3Path.addLine(to: CGPoint(x: 99.84, y: 96.67))
        bezier3Path.addCurve(to: CGPoint(x: 102.12, y: 93.87), controlPoint1: CGPoint(x: 100.33, y: 95.71), controlPoint2: CGPoint(x: 100.72, y: 95.27))
        bezier3Path.addCurve(to: CGPoint(x: 102.53, y: 93.44), controlPoint1: CGPoint(x: 102.15, y: 93.83), controlPoint2: CGPoint(x: 102.15, y: 93.83))
        bezier3Path.addCurve(to: CGPoint(x: 103.81, y: 92.1), controlPoint1: CGPoint(x: 102.9, y: 93.05), controlPoint2: CGPoint(x: 103.33, y: 92.6))
        bezier3Path.addCurve(to: CGPoint(x: 108.4, y: 87.32), controlPoint1: CGPoint(x: 105.2, y: 90.66), controlPoint2: CGPoint(x: 106.74, y: 89.05))
        bezier3Path.addCurve(to: CGPoint(x: 114.89, y: 80.55), controlPoint1: CGPoint(x: 110.57, y: 85.05), controlPoint2: CGPoint(x: 112.75, y: 82.78))
        bezier3Path.addCurve(to: CGPoint(x: 122.35, y: 72.8), controlPoint1: CGPoint(x: 117.43, y: 77.91), controlPoint2: CGPoint(x: 119.94, y: 75.3))
        bezier3Path.addCurve(to: CGPoint(x: 122.56, y: 72.58), controlPoint1: CGPoint(x: 122.46, y: 72.69), controlPoint2: CGPoint(x: 122.46, y: 72.69))
        bezier3Path.addCurve(to: CGPoint(x: 133.85, y: 60.91), controlPoint1: CGPoint(x: 126.9, y: 68.07), controlPoint2: CGPoint(x: 130.71, y: 64.13))
        bezier3Path.addCurve(to: CGPoint(x: 137.18, y: 57.44), controlPoint1: CGPoint(x: 134.53, y: 60.21), controlPoint2: CGPoint(x: 136.79, y: 57.84))
        bezier3Path.addCurve(to: CGPoint(x: 140.39, y: 54.3), controlPoint1: CGPoint(x: 138.47, y: 56.1), controlPoint2: CGPoint(x: 139.45, y: 55.14))
        bezier3Path.addCurve(to: CGPoint(x: 147.79, y: 50.7), controlPoint1: CGPoint(x: 143.05, y: 51.94), controlPoint2: CGPoint(x: 145.31, y: 50.69))
        bezier3Path.addCurve(to: CGPoint(x: 154.24, y: 53.76), controlPoint1: CGPoint(x: 150.01, y: 50.71), controlPoint2: CGPoint(x: 152.01, y: 51.79))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 202.54, y: 129.46))
        bezier3Path.addCurve(to: CGPoint(x: 216.32, y: 142.6), controlPoint1: CGPoint(x: 207.82, y: 131.2), controlPoint2: CGPoint(x: 214.28, y: 137))
        bezier3Path.addLine(to: CGPoint(x: 216.36, y: 142.73))
        bezier3Path.addCurve(to: CGPoint(x: 216.69, y: 143.84), controlPoint1: CGPoint(x: 216.48, y: 143.1), controlPoint2: CGPoint(x: 216.59, y: 143.47))
        bezier3Path.addCurve(to: CGPoint(x: 218, y: 161.57), controlPoint1: CGPoint(x: 217.84, y: 148.02), controlPoint2: CGPoint(x: 218, y: 150.91))
        bezier3Path.addLine(to: CGPoint(x: 218, y: 205.43))
        bezier3Path.addCurve(to: CGPoint(x: 216.61, y: 223.32), controlPoint1: CGPoint(x: 218, y: 216.59), controlPoint2: CGPoint(x: 217.84, y: 219.52))
        bezier3Path.addLine(to: CGPoint(x: 216.58, y: 223.43))
        bezier3Path.addCurve(to: CGPoint(x: 216.54, y: 223.54), controlPoint1: CGPoint(x: 216.6, y: 223.32), controlPoint2: CGPoint(x: 216.54, y: 223.54))
        bezier3Path.addLine(to: CGPoint(x: 216.58, y: 223.43))
        bezier3Path.addCurve(to: CGPoint(x: 216.55, y: 223.54), controlPoint1: CGPoint(x: 216.57, y: 223.46), controlPoint2: CGPoint(x: 216.56, y: 223.5))
        bezier3Path.addCurve(to: CGPoint(x: 216.42, y: 224.08), controlPoint1: CGPoint(x: 216.49, y: 223.77), controlPoint2: CGPoint(x: 216.42, y: 224.08))
        bezier3Path.addLine(to: CGPoint(x: 216.38, y: 224.24))
        bezier3Path.addLine(to: CGPoint(x: 216.32, y: 224.4))
        bezier3Path.addCurve(to: CGPoint(x: 203.4, y: 237.32), controlPoint1: CGPoint(x: 214.13, y: 230.4), controlPoint2: CGPoint(x: 209.4, y: 235.13))
        bezier3Path.addLine(to: CGPoint(x: 203.27, y: 237.36))
        bezier3Path.addCurve(to: CGPoint(x: 184.43, y: 239), controlPoint1: CGPoint(x: 198.72, y: 238.8), controlPoint2: CGPoint(x: 195.76, y: 239))
        bezier3Path.addLine(to: CGPoint(x: 114.57, y: 239))
        bezier3Path.addCurve(to: CGPoint(x: 96.68, y: 237.61), controlPoint1: CGPoint(x: 103.41, y: 239), controlPoint2: CGPoint(x: 100.48, y: 238.84))
        bezier3Path.addLine(to: CGPoint(x: 96.57, y: 237.58))
        bezier3Path.addCurve(to: CGPoint(x: 96.46, y: 237.54), controlPoint1: CGPoint(x: 96.68, y: 237.6), controlPoint2: CGPoint(x: 96.46, y: 237.54))
        bezier3Path.addLine(to: CGPoint(x: 96.57, y: 237.58))
        bezier3Path.addCurve(to: CGPoint(x: 96.46, y: 237.55), controlPoint1: CGPoint(x: 96.54, y: 237.57), controlPoint2: CGPoint(x: 96.5, y: 237.56))
        bezier3Path.addCurve(to: CGPoint(x: 95.92, y: 237.42), controlPoint1: CGPoint(x: 96.23, y: 237.49), controlPoint2: CGPoint(x: 95.92, y: 237.42))
        bezier3Path.addLine(to: CGPoint(x: 95.76, y: 237.38))
        bezier3Path.addLine(to: CGPoint(x: 95.6, y: 237.32))
        bezier3Path.addCurve(to: CGPoint(x: 82.68, y: 224.4), controlPoint1: CGPoint(x: 89.6, y: 235.13), controlPoint2: CGPoint(x: 84.87, y: 230.4))
        bezier3Path.addLine(to: CGPoint(x: 82.64, y: 224.27))
        bezier3Path.addCurve(to: CGPoint(x: 82.31, y: 223.16), controlPoint1: CGPoint(x: 82.52, y: 223.9), controlPoint2: CGPoint(x: 82.41, y: 223.53))
        bezier3Path.addCurve(to: CGPoint(x: 81, y: 205.43), controlPoint1: CGPoint(x: 81.16, y: 218.98), controlPoint2: CGPoint(x: 81, y: 216.09))
        bezier3Path.addLine(to: CGPoint(x: 81, y: 161.57))
        bezier3Path.addCurve(to: CGPoint(x: 80.98, y: 158.05), controlPoint1: CGPoint(x: 81, y: 160.5), controlPoint2: CGPoint(x: 81, y: 159.59))
        bezier3Path.addCurve(to: CGPoint(x: 81.69, y: 145.99), controlPoint1: CGPoint(x: 80.93, y: 151.13), controlPoint2: CGPoint(x: 81.02, y: 149.05))
        bezier3Path.addCurve(to: CGPoint(x: 82.68, y: 142.6), controlPoint1: CGPoint(x: 81.94, y: 144.86), controlPoint2: CGPoint(x: 82.26, y: 143.75))
        bezier3Path.addCurve(to: CGPoint(x: 95.6, y: 129.68), controlPoint1: CGPoint(x: 84.87, y: 136.6), controlPoint2: CGPoint(x: 89.6, y: 131.87))
        bezier3Path.addLine(to: CGPoint(x: 95.73, y: 129.64))
        bezier3Path.addCurve(to: CGPoint(x: 115, y: 128), controlPoint1: CGPoint(x: 99.96, y: 128.3), controlPoint2: CGPoint(x: 104.45, y: 128.01))
        bezier3Path.addCurve(to: CGPoint(x: 124, y: 138), controlPoint1: CGPoint(x: 121.57, y: 128), controlPoint2: CGPoint(x: 124, y: 130.12))
        bezier3Path.addCurve(to: CGPoint(x: 121.75, y: 146.25), controlPoint1: CGPoint(x: 124, y: 142.06), controlPoint2: CGPoint(x: 123.39, y: 144.6))
        bezier3Path.addCurve(to: CGPoint(x: 116, y: 148), controlPoint1: CGPoint(x: 120.22, y: 147.77), controlPoint2: CGPoint(x: 118.94, y: 148))
        bezier3Path.addCurve(to: CGPoint(x: 104.97, y: 148.65), controlPoint1: CGPoint(x: 111.42, y: 148), controlPoint2: CGPoint(x: 106.49, y: 148.24))
        bezier3Path.addLine(to: CGPoint(x: 104.91, y: 148.67))
        bezier3Path.addLine(to: CGPoint(x: 104.97, y: 148.64))
        bezier3Path.addLine(to: CGPoint(x: 104.85, y: 148.68))
        bezier3Path.addLine(to: CGPoint(x: 104.9, y: 148.67))
        bezier3Path.addLine(to: CGPoint(x: 104.85, y: 148.69))
        bezier3Path.addCurve(to: CGPoint(x: 100.64, y: 152.97), controlPoint1: CGPoint(x: 102.9, y: 149.44), controlPoint2: CGPoint(x: 101.36, y: 151))
        bezier3Path.addCurve(to: CGPoint(x: 100.27, y: 154.24), controlPoint1: CGPoint(x: 100.48, y: 153.41), controlPoint2: CGPoint(x: 100.36, y: 153.82))
        bezier3Path.addCurve(to: CGPoint(x: 99.99, y: 159.84), controlPoint1: CGPoint(x: 100, y: 155.46), controlPoint2: CGPoint(x: 99.97, y: 156.41))
        bezier3Path.addCurve(to: CGPoint(x: 100, y: 161.82), controlPoint1: CGPoint(x: 100, y: 160.7), controlPoint2: CGPoint(x: 100, y: 161.21))
        bezier3Path.addLine(to: CGPoint(x: 100, y: 206.18))
        bezier3Path.addCurve(to: CGPoint(x: 100.55, y: 214.71), controlPoint1: CGPoint(x: 100, y: 211.59), controlPoint2: CGPoint(x: 100.08, y: 212.97))
        bezier3Path.addCurve(to: CGPoint(x: 100.65, y: 215.03), controlPoint1: CGPoint(x: 100.58, y: 214.81), controlPoint2: CGPoint(x: 100.61, y: 214.92))
        bezier3Path.addLine(to: CGPoint(x: 100.66, y: 215.08))
        bezier3Path.addLine(to: CGPoint(x: 100.64, y: 215.03))
        bezier3Path.addLine(to: CGPoint(x: 100.68, y: 215.15))
        bezier3Path.addLine(to: CGPoint(x: 100.66, y: 215.09))
        bezier3Path.addLine(to: CGPoint(x: 100.69, y: 215.15))
        bezier3Path.addCurve(to: CGPoint(x: 104.67, y: 219.24), controlPoint1: CGPoint(x: 101.4, y: 217), controlPoint2: CGPoint(x: 102.84, y: 218.48))
        bezier3Path.addLine(to: CGPoint(x: 104.83, y: 219.3))
        bezier3Path.addCurve(to: CGPoint(x: 104.66, y: 219.26), controlPoint1: CGPoint(x: 104.74, y: 219.28), controlPoint2: CGPoint(x: 104.66, y: 219.26))
        bezier3Path.addLine(to: CGPoint(x: 104.97, y: 219.36))
        bezier3Path.addLine(to: CGPoint(x: 104.84, y: 219.31))
        bezier3Path.addCurve(to: CGPoint(x: 104.98, y: 219.34), controlPoint1: CGPoint(x: 104.88, y: 219.32), controlPoint2: CGPoint(x: 104.93, y: 219.33))
        bezier3Path.addCurve(to: CGPoint(x: 105.2, y: 219.39), controlPoint1: CGPoint(x: 105.08, y: 219.37), controlPoint2: CGPoint(x: 105.2, y: 219.39))
        bezier3Path.addLine(to: CGPoint(x: 105.31, y: 219.43))
        bezier3Path.addCurve(to: CGPoint(x: 113.82, y: 220), controlPoint1: CGPoint(x: 106.78, y: 219.92), controlPoint2: CGPoint(x: 108.14, y: 220))
        bezier3Path.addLine(to: CGPoint(x: 185.18, y: 220))
        bezier3Path.addCurve(to: CGPoint(x: 193.71, y: 219.45), controlPoint1: CGPoint(x: 190.59, y: 220), controlPoint2: CGPoint(x: 191.97, y: 219.92))
        bezier3Path.addCurve(to: CGPoint(x: 194.03, y: 219.35), controlPoint1: CGPoint(x: 193.81, y: 219.42), controlPoint2: CGPoint(x: 193.92, y: 219.39))
        bezier3Path.addLine(to: CGPoint(x: 194.08, y: 219.34))
        bezier3Path.addLine(to: CGPoint(x: 194.03, y: 219.36))
        bezier3Path.addLine(to: CGPoint(x: 194.15, y: 219.32))
        bezier3Path.addLine(to: CGPoint(x: 194.09, y: 219.34))
        bezier3Path.addLine(to: CGPoint(x: 194.15, y: 219.31))
        bezier3Path.addCurve(to: CGPoint(x: 198.24, y: 215.33), controlPoint1: CGPoint(x: 196, y: 218.6), controlPoint2: CGPoint(x: 197.48, y: 217.16))
        bezier3Path.addLine(to: CGPoint(x: 198.3, y: 215.17))
        bezier3Path.addCurve(to: CGPoint(x: 198.26, y: 215.34), controlPoint1: CGPoint(x: 198.28, y: 215.26), controlPoint2: CGPoint(x: 198.26, y: 215.34))
        bezier3Path.addLine(to: CGPoint(x: 198.36, y: 215.03))
        bezier3Path.addLine(to: CGPoint(x: 198.31, y: 215.16))
        bezier3Path.addCurve(to: CGPoint(x: 198.34, y: 215.02), controlPoint1: CGPoint(x: 198.32, y: 215.12), controlPoint2: CGPoint(x: 198.33, y: 215.07))
        bezier3Path.addCurve(to: CGPoint(x: 198.39, y: 214.8), controlPoint1: CGPoint(x: 198.37, y: 214.92), controlPoint2: CGPoint(x: 198.39, y: 214.8))
        bezier3Path.addLine(to: CGPoint(x: 198.43, y: 214.69))
        bezier3Path.addCurve(to: CGPoint(x: 199, y: 206.18), controlPoint1: CGPoint(x: 198.92, y: 213.22), controlPoint2: CGPoint(x: 199, y: 211.86))
        bezier3Path.addLine(to: CGPoint(x: 199, y: 161.82))
        bezier3Path.addCurve(to: CGPoint(x: 198.45, y: 153.29), controlPoint1: CGPoint(x: 199, y: 156.41), controlPoint2: CGPoint(x: 198.92, y: 155.03))
        bezier3Path.addCurve(to: CGPoint(x: 198.35, y: 152.97), controlPoint1: CGPoint(x: 198.42, y: 153.19), controlPoint2: CGPoint(x: 198.39, y: 153.08))
        bezier3Path.addLine(to: CGPoint(x: 198.34, y: 152.92))
        bezier3Path.addLine(to: CGPoint(x: 198.36, y: 152.97))
        bezier3Path.addLine(to: CGPoint(x: 198.32, y: 152.85))
        bezier3Path.addLine(to: CGPoint(x: 198.34, y: 152.92))
        bezier3Path.addLine(to: CGPoint(x: 198.31, y: 152.85))
        bezier3Path.addCurve(to: CGPoint(x: 193.69, y: 148.57), controlPoint1: CGPoint(x: 197.63, y: 151.18), controlPoint2: CGPoint(x: 195.29, y: 149.1))
        bezier3Path.addCurve(to: CGPoint(x: 187.86, y: 148.06), controlPoint1: CGPoint(x: 193, y: 148.34), controlPoint2: CGPoint(x: 190.81, y: 148.15))
        bezier3Path.addCurve(to: CGPoint(x: 182.18, y: 148), controlPoint1: CGPoint(x: 186.13, y: 148.01), controlPoint2: CGPoint(x: 184.66, y: 148))
        bezier3Path.addCurve(to: CGPoint(x: 176.3, y: 146.27), controlPoint1: CGPoint(x: 179.13, y: 148), controlPoint2: CGPoint(x: 177.85, y: 147.78))
        bezier3Path.addCurve(to: CGPoint(x: 174, y: 138), controlPoint1: CGPoint(x: 174.61, y: 144.63), controlPoint2: CGPoint(x: 174, y: 142.08))
        bezier3Path.addCurve(to: CGPoint(x: 182, y: 128), controlPoint1: CGPoint(x: 174, y: 130.34), controlPoint2: CGPoint(x: 176.34, y: 128))
        bezier3Path.addCurve(to: CGPoint(x: 202.54, y: 129.46), controlPoint1: CGPoint(x: 194.24, y: 128), controlPoint2: CGPoint(x: 198.8, y: 128.23))
        bezier3Path.close()
        iconColor.setFill()
        bezier3Path.fill()
        
        context.restoreGState()

    }

    //// Generated Images

    public dynamic class var imageOfLightPlaceholderReleaseArtwork: UIImage {
        if Cache.imageOfLightPlaceholderReleaseArtwork != nil {
            return Cache.imageOfLightPlaceholderReleaseArtwork!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 300, height: 300), false, 0)
            StyleKit.drawLightPlaceholderReleaseArtwork()

        Cache.imageOfLightPlaceholderReleaseArtwork = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfLightPlaceholderReleaseArtwork!
    }

    public dynamic class var imageOfDarkPlaceholderReleaseArtwork: UIImage {
        if Cache.imageOfDarkPlaceholderReleaseArtwork != nil {
            return Cache.imageOfDarkPlaceholderReleaseArtwork!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 300, height: 300), false, 0)
            StyleKit.drawDarkPlaceholderReleaseArtwork()

        Cache.imageOfDarkPlaceholderReleaseArtwork = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfDarkPlaceholderReleaseArtwork!
    }

    public dynamic class var imageOfLightPlaceholderArtistArtwork: UIImage {
        if Cache.imageOfLightPlaceholderArtistArtwork != nil {
            return Cache.imageOfLightPlaceholderArtistArtwork!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 300, height: 300), false, 0)
            StyleKit.drawLightPlaceholderArtistArtwork()

        Cache.imageOfLightPlaceholderArtistArtwork = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfLightPlaceholderArtistArtwork!
    }

    public dynamic class var imageOfDarkPlaceholderArtistArtwork: UIImage {
        if Cache.imageOfDarkPlaceholderArtistArtwork != nil {
            return Cache.imageOfDarkPlaceholderArtistArtwork!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 300, height: 300), false, 0)
            StyleKit.drawDarkPlaceholderArtistArtwork()

        Cache.imageOfDarkPlaceholderArtistArtwork = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfDarkPlaceholderArtistArtwork!
    }

    //// Customization Infrastructure

    @IBOutlet dynamic var lightPlaceholderReleaseArtworkTargets: [AnyObject]! {
        get { return Cache.lightPlaceholderReleaseArtworkTargets }
        set {
            Cache.lightPlaceholderReleaseArtworkTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: StyleKit.imageOfLightPlaceholderReleaseArtwork)
            }
        }
    }

    @IBOutlet dynamic var darkPlaceholderReleaseArtworkTargets: [AnyObject]! {
        get { return Cache.darkPlaceholderReleaseArtworkTargets }
        set {
            Cache.darkPlaceholderReleaseArtworkTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: StyleKit.imageOfDarkPlaceholderReleaseArtwork)
            }
        }
    }

    @IBOutlet dynamic var lightPlaceholderArtistArtworkTargets: [AnyObject]! {
        get { return Cache.lightPlaceholderArtistArtworkTargets }
        set {
            Cache.lightPlaceholderArtistArtworkTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: StyleKit.imageOfLightPlaceholderArtistArtwork)
            }
        }
    }

    @IBOutlet dynamic var darkPlaceholderArtistArtworkTargets: [AnyObject]! {
        get { return Cache.darkPlaceholderArtistArtworkTargets }
        set {
            Cache.darkPlaceholderArtistArtworkTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: StyleKit.imageOfDarkPlaceholderArtistArtwork)
            }
        }
    }




    @objc(StyleKitResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}



extension UIColor {
    func withHue(_ newHue: CGFloat) -> UIColor {
        var saturation: CGFloat = 1, brightness: CGFloat = 1, alpha: CGFloat = 1
        self.getHue(nil, saturation: &saturation, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: newHue, saturation: saturation, brightness: brightness, alpha: alpha)
    }
    func withSaturation(_ newSaturation: CGFloat) -> UIColor {
        var hue: CGFloat = 1, brightness: CGFloat = 1, alpha: CGFloat = 1
        self.getHue(&hue, saturation: nil, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: hue, saturation: newSaturation, brightness: brightness, alpha: alpha)
    }
    func withBrightness(_ newBrightness: CGFloat) -> UIColor {
        var hue: CGFloat = 1, saturation: CGFloat = 1, alpha: CGFloat = 1
        self.getHue(&hue, saturation: &saturation, brightness: nil, alpha: &alpha)
        return UIColor(hue: hue, saturation: saturation, brightness: newBrightness, alpha: alpha)
    }
    func withAlpha(_ newAlpha: CGFloat) -> UIColor {
        var hue: CGFloat = 1, saturation: CGFloat = 1, brightness: CGFloat = 1
        self.getHue(&hue, saturation: &saturation, brightness: &brightness, alpha: nil)
        return UIColor(hue: hue, saturation: saturation, brightness: brightness, alpha: newAlpha)
    }
    func highlight(withLevel highlight: CGFloat) -> UIColor {
        var red: CGFloat = 1, green: CGFloat = 1, blue: CGFloat = 1, alpha: CGFloat = 1
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-highlight) + highlight, green: green * (1-highlight) + highlight, blue: blue * (1-highlight) + highlight, alpha: alpha * (1-highlight) + highlight)
    }
    func shadow(withLevel shadow: CGFloat) -> UIColor {
        var red: CGFloat = 1, green: CGFloat = 1, blue: CGFloat = 1, alpha: CGFloat = 1
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-shadow), green: green * (1-shadow), blue: blue * (1-shadow), alpha: alpha * (1-shadow) + shadow)
    }
}
